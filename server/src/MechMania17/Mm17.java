// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mm17.proto

package MechMania17;

public final class Mm17 {
  private Mm17() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum CommandType
      implements com.google.protobuf.ProtocolMessageEnum {
    SURRENDER(0, 0),
    ATTACK(1, 1),
    MOVE(2, 2),
    SUMMON(3, 3),
    LOADSUB(4, 4),
    MOVESUB(5, 5),
    SUMMONSUB(6, 7),
    ATTACHSUB(7, 8),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static CommandType valueOf(int value) {
      switch (value) {
        case 0: return SURRENDER;
        case 1: return ATTACK;
        case 2: return MOVE;
        case 3: return SUMMON;
        case 4: return LOADSUB;
        case 5: return MOVESUB;
        case 7: return SUMMONSUB;
        case 8: return ATTACHSUB;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<CommandType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CommandType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CommandType>() {
            public CommandType findValueByNumber(int number) {
              return CommandType.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MechMania17.Mm17.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final CommandType[] VALUES = {
      SURRENDER, ATTACK, MOVE, SUMMON, LOADSUB, MOVESUB, SUMMONSUB, ATTACHSUB, 
    };
    public static CommandType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private CommandType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      MechMania17.Mm17.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:MechMania17.CommandType)
  }
  
  public static final class ClientConnect extends
      com.google.protobuf.GeneratedMessage {
    // Use ClientConnect.newBuilder() to construct.
    private ClientConnect() {
      initFields();
    }
    private ClientConnect(boolean noInit) {}
    
    private static final ClientConnect defaultInstance;
    public static ClientConnect getDefaultInstance() {
      return defaultInstance;
    }
    
    public ClientConnect getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MechMania17.Mm17.internal_static_MechMania17_ClientConnect_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MechMania17.Mm17.internal_static_MechMania17_ClientConnect_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional int32 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasId()) {
        output.writeInt32(2, getId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static MechMania17.Mm17.ClientConnect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.ClientConnect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.ClientConnect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.ClientConnect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.ClientConnect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.ClientConnect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.ClientConnect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.ClientConnect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.ClientConnect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.ClientConnect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MechMania17.Mm17.ClientConnect prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private MechMania17.Mm17.ClientConnect result;
      
      // Construct using MechMania17.Mm17.ClientConnect.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new MechMania17.Mm17.ClientConnect();
        return builder;
      }
      
      protected MechMania17.Mm17.ClientConnect internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new MechMania17.Mm17.ClientConnect();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MechMania17.Mm17.ClientConnect.getDescriptor();
      }
      
      public MechMania17.Mm17.ClientConnect getDefaultInstanceForType() {
        return MechMania17.Mm17.ClientConnect.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public MechMania17.Mm17.ClientConnect build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private MechMania17.Mm17.ClientConnect buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public MechMania17.Mm17.ClientConnect buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        MechMania17.Mm17.ClientConnect returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MechMania17.Mm17.ClientConnect) {
          return mergeFrom((MechMania17.Mm17.ClientConnect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(MechMania17.Mm17.ClientConnect other) {
        if (other == MechMania17.Mm17.ClientConnect.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 16: {
              setId(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional int32 id = 2;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MechMania17.ClientConnect)
    }
    
    static {
      defaultInstance = new ClientConnect(true);
      MechMania17.Mm17.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MechMania17.ClientConnect)
  }
  
  public static final class PlayerList extends
      com.google.protobuf.GeneratedMessage {
    // Use PlayerList.newBuilder() to construct.
    private PlayerList() {
      initFields();
    }
    private PlayerList(boolean noInit) {}
    
    private static final PlayerList defaultInstance;
    public static PlayerList getDefaultInstance() {
      return defaultInstance;
    }
    
    public PlayerList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MechMania17.Mm17.internal_static_MechMania17_PlayerList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MechMania17.Mm17.internal_static_MechMania17_PlayerList_fieldAccessorTable;
    }
    
    // repeated .MechMania17.ClientConnect players = 1;
    public static final int PLAYERS_FIELD_NUMBER = 1;
    private java.util.List<MechMania17.Mm17.ClientConnect> players_ =
      java.util.Collections.emptyList();
    public java.util.List<MechMania17.Mm17.ClientConnect> getPlayersList() {
      return players_;
    }
    public int getPlayersCount() { return players_.size(); }
    public MechMania17.Mm17.ClientConnect getPlayers(int index) {
      return players_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (MechMania17.Mm17.ClientConnect element : getPlayersList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (MechMania17.Mm17.ClientConnect element : getPlayersList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (MechMania17.Mm17.ClientConnect element : getPlayersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static MechMania17.Mm17.PlayerList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.PlayerList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.PlayerList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.PlayerList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.PlayerList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.PlayerList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.PlayerList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.PlayerList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.PlayerList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.PlayerList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MechMania17.Mm17.PlayerList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private MechMania17.Mm17.PlayerList result;
      
      // Construct using MechMania17.Mm17.PlayerList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new MechMania17.Mm17.PlayerList();
        return builder;
      }
      
      protected MechMania17.Mm17.PlayerList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new MechMania17.Mm17.PlayerList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MechMania17.Mm17.PlayerList.getDescriptor();
      }
      
      public MechMania17.Mm17.PlayerList getDefaultInstanceForType() {
        return MechMania17.Mm17.PlayerList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public MechMania17.Mm17.PlayerList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private MechMania17.Mm17.PlayerList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public MechMania17.Mm17.PlayerList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.players_ != java.util.Collections.EMPTY_LIST) {
          result.players_ =
            java.util.Collections.unmodifiableList(result.players_);
        }
        MechMania17.Mm17.PlayerList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MechMania17.Mm17.PlayerList) {
          return mergeFrom((MechMania17.Mm17.PlayerList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(MechMania17.Mm17.PlayerList other) {
        if (other == MechMania17.Mm17.PlayerList.getDefaultInstance()) return this;
        if (!other.players_.isEmpty()) {
          if (result.players_.isEmpty()) {
            result.players_ = new java.util.ArrayList<MechMania17.Mm17.ClientConnect>();
          }
          result.players_.addAll(other.players_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              MechMania17.Mm17.ClientConnect.Builder subBuilder = MechMania17.Mm17.ClientConnect.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPlayers(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .MechMania17.ClientConnect players = 1;
      public java.util.List<MechMania17.Mm17.ClientConnect> getPlayersList() {
        return java.util.Collections.unmodifiableList(result.players_);
      }
      public int getPlayersCount() {
        return result.getPlayersCount();
      }
      public MechMania17.Mm17.ClientConnect getPlayers(int index) {
        return result.getPlayers(index);
      }
      public Builder setPlayers(int index, MechMania17.Mm17.ClientConnect value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.players_.set(index, value);
        return this;
      }
      public Builder setPlayers(int index, MechMania17.Mm17.ClientConnect.Builder builderForValue) {
        result.players_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPlayers(MechMania17.Mm17.ClientConnect value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.players_.isEmpty()) {
          result.players_ = new java.util.ArrayList<MechMania17.Mm17.ClientConnect>();
        }
        result.players_.add(value);
        return this;
      }
      public Builder addPlayers(MechMania17.Mm17.ClientConnect.Builder builderForValue) {
        if (result.players_.isEmpty()) {
          result.players_ = new java.util.ArrayList<MechMania17.Mm17.ClientConnect>();
        }
        result.players_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPlayers(
          java.lang.Iterable<? extends MechMania17.Mm17.ClientConnect> values) {
        if (result.players_.isEmpty()) {
          result.players_ = new java.util.ArrayList<MechMania17.Mm17.ClientConnect>();
        }
        super.addAll(values, result.players_);
        return this;
      }
      public Builder clearPlayers() {
        result.players_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MechMania17.PlayerList)
    }
    
    static {
      defaultInstance = new PlayerList(true);
      MechMania17.Mm17.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MechMania17.PlayerList)
  }
  
  public static final class DeadPlayers extends
      com.google.protobuf.GeneratedMessage {
    // Use DeadPlayers.newBuilder() to construct.
    private DeadPlayers() {
      initFields();
    }
    private DeadPlayers(boolean noInit) {}
    
    private static final DeadPlayers defaultInstance;
    public static DeadPlayers getDefaultInstance() {
      return defaultInstance;
    }
    
    public DeadPlayers getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MechMania17.Mm17.internal_static_MechMania17_DeadPlayers_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MechMania17.Mm17.internal_static_MechMania17_DeadPlayers_fieldAccessorTable;
    }
    
    public static final class DeadPlayer extends
        com.google.protobuf.GeneratedMessage {
      // Use DeadPlayer.newBuilder() to construct.
      private DeadPlayer() {
        initFields();
      }
      private DeadPlayer(boolean noInit) {}
      
      private static final DeadPlayer defaultInstance;
      public static DeadPlayer getDefaultInstance() {
        return defaultInstance;
      }
      
      public DeadPlayer getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MechMania17.Mm17.internal_static_MechMania17_DeadPlayers_DeadPlayer_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MechMania17.Mm17.internal_static_MechMania17_DeadPlayers_DeadPlayer_fieldAccessorTable;
      }
      
      // required string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private boolean hasName;
      private java.lang.String name_ = "";
      public boolean hasName() { return hasName; }
      public java.lang.String getName() { return name_; }
      
      // required string reason = 2;
      public static final int REASON_FIELD_NUMBER = 2;
      private boolean hasReason;
      private java.lang.String reason_ = "";
      public boolean hasReason() { return hasReason; }
      public java.lang.String getReason() { return reason_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasName) return false;
        if (!hasReason) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasName()) {
          output.writeString(1, getName());
        }
        if (hasReason()) {
          output.writeString(2, getReason());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getName());
        }
        if (hasReason()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getReason());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static MechMania17.Mm17.DeadPlayers.DeadPlayer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.DeadPlayers.DeadPlayer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.DeadPlayers.DeadPlayer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.DeadPlayers.DeadPlayer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.DeadPlayers.DeadPlayer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.DeadPlayers.DeadPlayer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.DeadPlayers.DeadPlayer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.DeadPlayers.DeadPlayer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.DeadPlayers.DeadPlayer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.DeadPlayers.DeadPlayer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MechMania17.Mm17.DeadPlayers.DeadPlayer prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private MechMania17.Mm17.DeadPlayers.DeadPlayer result;
        
        // Construct using MechMania17.Mm17.DeadPlayers.DeadPlayer.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new MechMania17.Mm17.DeadPlayers.DeadPlayer();
          return builder;
        }
        
        protected MechMania17.Mm17.DeadPlayers.DeadPlayer internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new MechMania17.Mm17.DeadPlayers.DeadPlayer();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MechMania17.Mm17.DeadPlayers.DeadPlayer.getDescriptor();
        }
        
        public MechMania17.Mm17.DeadPlayers.DeadPlayer getDefaultInstanceForType() {
          return MechMania17.Mm17.DeadPlayers.DeadPlayer.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public MechMania17.Mm17.DeadPlayers.DeadPlayer build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private MechMania17.Mm17.DeadPlayers.DeadPlayer buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public MechMania17.Mm17.DeadPlayers.DeadPlayer buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          MechMania17.Mm17.DeadPlayers.DeadPlayer returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MechMania17.Mm17.DeadPlayers.DeadPlayer) {
            return mergeFrom((MechMania17.Mm17.DeadPlayers.DeadPlayer)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(MechMania17.Mm17.DeadPlayers.DeadPlayer other) {
          if (other == MechMania17.Mm17.DeadPlayers.DeadPlayer.getDefaultInstance()) return this;
          if (other.hasName()) {
            setName(other.getName());
          }
          if (other.hasReason()) {
            setReason(other.getReason());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setName(input.readString());
                break;
              }
              case 18: {
                setReason(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required string name = 1;
        public boolean hasName() {
          return result.hasName();
        }
        public java.lang.String getName() {
          return result.getName();
        }
        public Builder setName(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder clearName() {
          result.hasName = false;
          result.name_ = getDefaultInstance().getName();
          return this;
        }
        
        // required string reason = 2;
        public boolean hasReason() {
          return result.hasReason();
        }
        public java.lang.String getReason() {
          return result.getReason();
        }
        public Builder setReason(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasReason = true;
          result.reason_ = value;
          return this;
        }
        public Builder clearReason() {
          result.hasReason = false;
          result.reason_ = getDefaultInstance().getReason();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MechMania17.DeadPlayers.DeadPlayer)
      }
      
      static {
        defaultInstance = new DeadPlayer(true);
        MechMania17.Mm17.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MechMania17.DeadPlayers.DeadPlayer)
    }
    
    // repeated .MechMania17.DeadPlayers.DeadPlayer players = 1;
    public static final int PLAYERS_FIELD_NUMBER = 1;
    private java.util.List<MechMania17.Mm17.DeadPlayers.DeadPlayer> players_ =
      java.util.Collections.emptyList();
    public java.util.List<MechMania17.Mm17.DeadPlayers.DeadPlayer> getPlayersList() {
      return players_;
    }
    public int getPlayersCount() { return players_.size(); }
    public MechMania17.Mm17.DeadPlayers.DeadPlayer getPlayers(int index) {
      return players_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (MechMania17.Mm17.DeadPlayers.DeadPlayer element : getPlayersList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (MechMania17.Mm17.DeadPlayers.DeadPlayer element : getPlayersList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (MechMania17.Mm17.DeadPlayers.DeadPlayer element : getPlayersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static MechMania17.Mm17.DeadPlayers parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.DeadPlayers parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.DeadPlayers parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.DeadPlayers parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.DeadPlayers parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.DeadPlayers parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.DeadPlayers parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.DeadPlayers parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.DeadPlayers parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.DeadPlayers parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MechMania17.Mm17.DeadPlayers prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private MechMania17.Mm17.DeadPlayers result;
      
      // Construct using MechMania17.Mm17.DeadPlayers.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new MechMania17.Mm17.DeadPlayers();
        return builder;
      }
      
      protected MechMania17.Mm17.DeadPlayers internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new MechMania17.Mm17.DeadPlayers();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MechMania17.Mm17.DeadPlayers.getDescriptor();
      }
      
      public MechMania17.Mm17.DeadPlayers getDefaultInstanceForType() {
        return MechMania17.Mm17.DeadPlayers.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public MechMania17.Mm17.DeadPlayers build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private MechMania17.Mm17.DeadPlayers buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public MechMania17.Mm17.DeadPlayers buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.players_ != java.util.Collections.EMPTY_LIST) {
          result.players_ =
            java.util.Collections.unmodifiableList(result.players_);
        }
        MechMania17.Mm17.DeadPlayers returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MechMania17.Mm17.DeadPlayers) {
          return mergeFrom((MechMania17.Mm17.DeadPlayers)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(MechMania17.Mm17.DeadPlayers other) {
        if (other == MechMania17.Mm17.DeadPlayers.getDefaultInstance()) return this;
        if (!other.players_.isEmpty()) {
          if (result.players_.isEmpty()) {
            result.players_ = new java.util.ArrayList<MechMania17.Mm17.DeadPlayers.DeadPlayer>();
          }
          result.players_.addAll(other.players_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              MechMania17.Mm17.DeadPlayers.DeadPlayer.Builder subBuilder = MechMania17.Mm17.DeadPlayers.DeadPlayer.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPlayers(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .MechMania17.DeadPlayers.DeadPlayer players = 1;
      public java.util.List<MechMania17.Mm17.DeadPlayers.DeadPlayer> getPlayersList() {
        return java.util.Collections.unmodifiableList(result.players_);
      }
      public int getPlayersCount() {
        return result.getPlayersCount();
      }
      public MechMania17.Mm17.DeadPlayers.DeadPlayer getPlayers(int index) {
        return result.getPlayers(index);
      }
      public Builder setPlayers(int index, MechMania17.Mm17.DeadPlayers.DeadPlayer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.players_.set(index, value);
        return this;
      }
      public Builder setPlayers(int index, MechMania17.Mm17.DeadPlayers.DeadPlayer.Builder builderForValue) {
        result.players_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPlayers(MechMania17.Mm17.DeadPlayers.DeadPlayer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.players_.isEmpty()) {
          result.players_ = new java.util.ArrayList<MechMania17.Mm17.DeadPlayers.DeadPlayer>();
        }
        result.players_.add(value);
        return this;
      }
      public Builder addPlayers(MechMania17.Mm17.DeadPlayers.DeadPlayer.Builder builderForValue) {
        if (result.players_.isEmpty()) {
          result.players_ = new java.util.ArrayList<MechMania17.Mm17.DeadPlayers.DeadPlayer>();
        }
        result.players_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPlayers(
          java.lang.Iterable<? extends MechMania17.Mm17.DeadPlayers.DeadPlayer> values) {
        if (result.players_.isEmpty()) {
          result.players_ = new java.util.ArrayList<MechMania17.Mm17.DeadPlayers.DeadPlayer>();
        }
        super.addAll(values, result.players_);
        return this;
      }
      public Builder clearPlayers() {
        result.players_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MechMania17.DeadPlayers)
    }
    
    static {
      defaultInstance = new DeadPlayers(true);
      MechMania17.Mm17.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MechMania17.DeadPlayers)
  }
  
  public static final class FinalScores extends
      com.google.protobuf.GeneratedMessage {
    // Use FinalScores.newBuilder() to construct.
    private FinalScores() {
      initFields();
    }
    private FinalScores(boolean noInit) {}
    
    private static final FinalScores defaultInstance;
    public static FinalScores getDefaultInstance() {
      return defaultInstance;
    }
    
    public FinalScores getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MechMania17.Mm17.internal_static_MechMania17_FinalScores_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MechMania17.Mm17.internal_static_MechMania17_FinalScores_fieldAccessorTable;
    }
    
    public static final class Score extends
        com.google.protobuf.GeneratedMessage {
      // Use Score.newBuilder() to construct.
      private Score() {
        initFields();
      }
      private Score(boolean noInit) {}
      
      private static final Score defaultInstance;
      public static Score getDefaultInstance() {
        return defaultInstance;
      }
      
      public Score getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MechMania17.Mm17.internal_static_MechMania17_FinalScores_Score_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MechMania17.Mm17.internal_static_MechMania17_FinalScores_Score_fieldAccessorTable;
      }
      
      // required string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private boolean hasName;
      private java.lang.String name_ = "";
      public boolean hasName() { return hasName; }
      public java.lang.String getName() { return name_; }
      
      // required int32 score = 2;
      public static final int SCORE_FIELD_NUMBER = 2;
      private boolean hasScore;
      private int score_ = 0;
      public boolean hasScore() { return hasScore; }
      public int getScore() { return score_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasName) return false;
        if (!hasScore) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasName()) {
          output.writeString(1, getName());
        }
        if (hasScore()) {
          output.writeInt32(2, getScore());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getName());
        }
        if (hasScore()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getScore());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static MechMania17.Mm17.FinalScores.Score parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.FinalScores.Score parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.FinalScores.Score parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.FinalScores.Score parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.FinalScores.Score parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.FinalScores.Score parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.FinalScores.Score parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.FinalScores.Score parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.FinalScores.Score parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.FinalScores.Score parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MechMania17.Mm17.FinalScores.Score prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private MechMania17.Mm17.FinalScores.Score result;
        
        // Construct using MechMania17.Mm17.FinalScores.Score.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new MechMania17.Mm17.FinalScores.Score();
          return builder;
        }
        
        protected MechMania17.Mm17.FinalScores.Score internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new MechMania17.Mm17.FinalScores.Score();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MechMania17.Mm17.FinalScores.Score.getDescriptor();
        }
        
        public MechMania17.Mm17.FinalScores.Score getDefaultInstanceForType() {
          return MechMania17.Mm17.FinalScores.Score.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public MechMania17.Mm17.FinalScores.Score build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private MechMania17.Mm17.FinalScores.Score buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public MechMania17.Mm17.FinalScores.Score buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          MechMania17.Mm17.FinalScores.Score returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MechMania17.Mm17.FinalScores.Score) {
            return mergeFrom((MechMania17.Mm17.FinalScores.Score)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(MechMania17.Mm17.FinalScores.Score other) {
          if (other == MechMania17.Mm17.FinalScores.Score.getDefaultInstance()) return this;
          if (other.hasName()) {
            setName(other.getName());
          }
          if (other.hasScore()) {
            setScore(other.getScore());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setName(input.readString());
                break;
              }
              case 16: {
                setScore(input.readInt32());
                break;
              }
            }
          }
        }
        
        
        // required string name = 1;
        public boolean hasName() {
          return result.hasName();
        }
        public java.lang.String getName() {
          return result.getName();
        }
        public Builder setName(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder clearName() {
          result.hasName = false;
          result.name_ = getDefaultInstance().getName();
          return this;
        }
        
        // required int32 score = 2;
        public boolean hasScore() {
          return result.hasScore();
        }
        public int getScore() {
          return result.getScore();
        }
        public Builder setScore(int value) {
          result.hasScore = true;
          result.score_ = value;
          return this;
        }
        public Builder clearScore() {
          result.hasScore = false;
          result.score_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MechMania17.FinalScores.Score)
      }
      
      static {
        defaultInstance = new Score(true);
        MechMania17.Mm17.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MechMania17.FinalScores.Score)
    }
    
    // repeated .MechMania17.FinalScores.Score scores = 1;
    public static final int SCORES_FIELD_NUMBER = 1;
    private java.util.List<MechMania17.Mm17.FinalScores.Score> scores_ =
      java.util.Collections.emptyList();
    public java.util.List<MechMania17.Mm17.FinalScores.Score> getScoresList() {
      return scores_;
    }
    public int getScoresCount() { return scores_.size(); }
    public MechMania17.Mm17.FinalScores.Score getScores(int index) {
      return scores_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (MechMania17.Mm17.FinalScores.Score element : getScoresList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (MechMania17.Mm17.FinalScores.Score element : getScoresList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (MechMania17.Mm17.FinalScores.Score element : getScoresList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static MechMania17.Mm17.FinalScores parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.FinalScores parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.FinalScores parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.FinalScores parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.FinalScores parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.FinalScores parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.FinalScores parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.FinalScores parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.FinalScores parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.FinalScores parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MechMania17.Mm17.FinalScores prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private MechMania17.Mm17.FinalScores result;
      
      // Construct using MechMania17.Mm17.FinalScores.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new MechMania17.Mm17.FinalScores();
        return builder;
      }
      
      protected MechMania17.Mm17.FinalScores internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new MechMania17.Mm17.FinalScores();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MechMania17.Mm17.FinalScores.getDescriptor();
      }
      
      public MechMania17.Mm17.FinalScores getDefaultInstanceForType() {
        return MechMania17.Mm17.FinalScores.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public MechMania17.Mm17.FinalScores build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private MechMania17.Mm17.FinalScores buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public MechMania17.Mm17.FinalScores buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.scores_ != java.util.Collections.EMPTY_LIST) {
          result.scores_ =
            java.util.Collections.unmodifiableList(result.scores_);
        }
        MechMania17.Mm17.FinalScores returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MechMania17.Mm17.FinalScores) {
          return mergeFrom((MechMania17.Mm17.FinalScores)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(MechMania17.Mm17.FinalScores other) {
        if (other == MechMania17.Mm17.FinalScores.getDefaultInstance()) return this;
        if (!other.scores_.isEmpty()) {
          if (result.scores_.isEmpty()) {
            result.scores_ = new java.util.ArrayList<MechMania17.Mm17.FinalScores.Score>();
          }
          result.scores_.addAll(other.scores_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              MechMania17.Mm17.FinalScores.Score.Builder subBuilder = MechMania17.Mm17.FinalScores.Score.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addScores(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .MechMania17.FinalScores.Score scores = 1;
      public java.util.List<MechMania17.Mm17.FinalScores.Score> getScoresList() {
        return java.util.Collections.unmodifiableList(result.scores_);
      }
      public int getScoresCount() {
        return result.getScoresCount();
      }
      public MechMania17.Mm17.FinalScores.Score getScores(int index) {
        return result.getScores(index);
      }
      public Builder setScores(int index, MechMania17.Mm17.FinalScores.Score value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.scores_.set(index, value);
        return this;
      }
      public Builder setScores(int index, MechMania17.Mm17.FinalScores.Score.Builder builderForValue) {
        result.scores_.set(index, builderForValue.build());
        return this;
      }
      public Builder addScores(MechMania17.Mm17.FinalScores.Score value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.scores_.isEmpty()) {
          result.scores_ = new java.util.ArrayList<MechMania17.Mm17.FinalScores.Score>();
        }
        result.scores_.add(value);
        return this;
      }
      public Builder addScores(MechMania17.Mm17.FinalScores.Score.Builder builderForValue) {
        if (result.scores_.isEmpty()) {
          result.scores_ = new java.util.ArrayList<MechMania17.Mm17.FinalScores.Score>();
        }
        result.scores_.add(builderForValue.build());
        return this;
      }
      public Builder addAllScores(
          java.lang.Iterable<? extends MechMania17.Mm17.FinalScores.Score> values) {
        if (result.scores_.isEmpty()) {
          result.scores_ = new java.util.ArrayList<MechMania17.Mm17.FinalScores.Score>();
        }
        super.addAll(values, result.scores_);
        return this;
      }
      public Builder clearScores() {
        result.scores_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MechMania17.FinalScores)
    }
    
    static {
      defaultInstance = new FinalScores(true);
      MechMania17.Mm17.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MechMania17.FinalScores)
  }
  
  public static final class InitialResources extends
      com.google.protobuf.GeneratedMessage {
    // Use InitialResources.newBuilder() to construct.
    private InitialResources() {
      initFields();
    }
    private InitialResources(boolean noInit) {}
    
    private static final InitialResources defaultInstance;
    public static InitialResources getDefaultInstance() {
      return defaultInstance;
    }
    
    public InitialResources getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MechMania17.Mm17.internal_static_MechMania17_InitialResources_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MechMania17.Mm17.internal_static_MechMania17_InitialResources_fieldAccessorTable;
    }
    
    public static final class Tile extends
        com.google.protobuf.GeneratedMessage {
      // Use Tile.newBuilder() to construct.
      private Tile() {
        initFields();
      }
      private Tile(boolean noInit) {}
      
      private static final Tile defaultInstance;
      public static Tile getDefaultInstance() {
        return defaultInstance;
      }
      
      public Tile getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MechMania17.Mm17.internal_static_MechMania17_InitialResources_Tile_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MechMania17.Mm17.internal_static_MechMania17_InitialResources_Tile_fieldAccessorTable;
      }
      
      public enum Terrain
          implements com.google.protobuf.ProtocolMessageEnum {
        PLAIN(0, 0),
        OCEAN(1, 1),
        MOUNTAIN(2, 2),
        ;
        
        
        public final int getNumber() { return value; }
        
        public static Terrain valueOf(int value) {
          switch (value) {
            case 0: return PLAIN;
            case 1: return OCEAN;
            case 2: return MOUNTAIN;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<Terrain>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<Terrain>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Terrain>() {
                public Terrain findValueByNumber(int number) {
                  return Terrain.valueOf(number)
        ;        }
              };
        
        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return MechMania17.Mm17.InitialResources.Tile.getDescriptor().getEnumTypes().get(0);
        }
        
        private static final Terrain[] VALUES = {
          PLAIN, OCEAN, MOUNTAIN, 
        };
        public static Terrain valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }
        private final int index;
        private final int value;
        private Terrain(int index, int value) {
          this.index = index;
          this.value = value;
        }
        
        static {
          MechMania17.Mm17.getDescriptor();
        }
        
        // @@protoc_insertion_point(enum_scope:MechMania17.InitialResources.Tile.Terrain)
      }
      
      // required int32 x = 1;
      public static final int X_FIELD_NUMBER = 1;
      private boolean hasX;
      private int x_ = 0;
      public boolean hasX() { return hasX; }
      public int getX() { return x_; }
      
      // required int32 y = 2;
      public static final int Y_FIELD_NUMBER = 2;
      private boolean hasY;
      private int y_ = 0;
      public boolean hasY() { return hasY; }
      public int getY() { return y_; }
      
      // optional .MechMania17.InitialResources.Tile.Terrain type = 3 [default = PLAIN];
      public static final int TYPE_FIELD_NUMBER = 3;
      private boolean hasType;
      private MechMania17.Mm17.InitialResources.Tile.Terrain type_;
      public boolean hasType() { return hasType; }
      public MechMania17.Mm17.InitialResources.Tile.Terrain getType() { return type_; }
      
      private void initFields() {
        type_ = MechMania17.Mm17.InitialResources.Tile.Terrain.PLAIN;
      }
      public final boolean isInitialized() {
        if (!hasX) return false;
        if (!hasY) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasX()) {
          output.writeInt32(1, getX());
        }
        if (hasY()) {
          output.writeInt32(2, getY());
        }
        if (hasType()) {
          output.writeEnum(3, getType().getNumber());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasX()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getX());
        }
        if (hasY()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getY());
        }
        if (hasType()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, getType().getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static MechMania17.Mm17.InitialResources.Tile parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.InitialResources.Tile parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.InitialResources.Tile parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.InitialResources.Tile parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.InitialResources.Tile parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.InitialResources.Tile parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.InitialResources.Tile parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.InitialResources.Tile parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.InitialResources.Tile parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.InitialResources.Tile parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MechMania17.Mm17.InitialResources.Tile prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private MechMania17.Mm17.InitialResources.Tile result;
        
        // Construct using MechMania17.Mm17.InitialResources.Tile.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new MechMania17.Mm17.InitialResources.Tile();
          return builder;
        }
        
        protected MechMania17.Mm17.InitialResources.Tile internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new MechMania17.Mm17.InitialResources.Tile();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MechMania17.Mm17.InitialResources.Tile.getDescriptor();
        }
        
        public MechMania17.Mm17.InitialResources.Tile getDefaultInstanceForType() {
          return MechMania17.Mm17.InitialResources.Tile.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public MechMania17.Mm17.InitialResources.Tile build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private MechMania17.Mm17.InitialResources.Tile buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public MechMania17.Mm17.InitialResources.Tile buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          MechMania17.Mm17.InitialResources.Tile returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MechMania17.Mm17.InitialResources.Tile) {
            return mergeFrom((MechMania17.Mm17.InitialResources.Tile)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(MechMania17.Mm17.InitialResources.Tile other) {
          if (other == MechMania17.Mm17.InitialResources.Tile.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasType()) {
            setType(other.getType());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setX(input.readInt32());
                break;
              }
              case 16: {
                setY(input.readInt32());
                break;
              }
              case 24: {
                int rawValue = input.readEnum();
                MechMania17.Mm17.InitialResources.Tile.Terrain value = MechMania17.Mm17.InitialResources.Tile.Terrain.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(3, rawValue);
                } else {
                  setType(value);
                }
                break;
              }
            }
          }
        }
        
        
        // required int32 x = 1;
        public boolean hasX() {
          return result.hasX();
        }
        public int getX() {
          return result.getX();
        }
        public Builder setX(int value) {
          result.hasX = true;
          result.x_ = value;
          return this;
        }
        public Builder clearX() {
          result.hasX = false;
          result.x_ = 0;
          return this;
        }
        
        // required int32 y = 2;
        public boolean hasY() {
          return result.hasY();
        }
        public int getY() {
          return result.getY();
        }
        public Builder setY(int value) {
          result.hasY = true;
          result.y_ = value;
          return this;
        }
        public Builder clearY() {
          result.hasY = false;
          result.y_ = 0;
          return this;
        }
        
        // optional .MechMania17.InitialResources.Tile.Terrain type = 3 [default = PLAIN];
        public boolean hasType() {
          return result.hasType();
        }
        public MechMania17.Mm17.InitialResources.Tile.Terrain getType() {
          return result.getType();
        }
        public Builder setType(MechMania17.Mm17.InitialResources.Tile.Terrain value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasType = true;
          result.type_ = value;
          return this;
        }
        public Builder clearType() {
          result.hasType = false;
          result.type_ = MechMania17.Mm17.InitialResources.Tile.Terrain.PLAIN;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MechMania17.InitialResources.Tile)
      }
      
      static {
        defaultInstance = new Tile(true);
        MechMania17.Mm17.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MechMania17.InitialResources.Tile)
    }
    
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // required int32 map_width = 2;
    public static final int MAP_WIDTH_FIELD_NUMBER = 2;
    private boolean hasMapWidth;
    private int mapWidth_ = 0;
    public boolean hasMapWidth() { return hasMapWidth; }
    public int getMapWidth() { return mapWidth_; }
    
    // repeated .MechMania17.InitialResources.Tile tiles = 3;
    public static final int TILES_FIELD_NUMBER = 3;
    private java.util.List<MechMania17.Mm17.InitialResources.Tile> tiles_ =
      java.util.Collections.emptyList();
    public java.util.List<MechMania17.Mm17.InitialResources.Tile> getTilesList() {
      return tiles_;
    }
    public int getTilesCount() { return tiles_.size(); }
    public MechMania17.Mm17.InitialResources.Tile getTiles(int index) {
      return tiles_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasMapWidth) return false;
      for (MechMania17.Mm17.InitialResources.Tile element : getTilesList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeInt32(1, getId());
      }
      if (hasMapWidth()) {
        output.writeInt32(2, getMapWidth());
      }
      for (MechMania17.Mm17.InitialResources.Tile element : getTilesList()) {
        output.writeMessage(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getId());
      }
      if (hasMapWidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getMapWidth());
      }
      for (MechMania17.Mm17.InitialResources.Tile element : getTilesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static MechMania17.Mm17.InitialResources parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.InitialResources parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.InitialResources parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.InitialResources parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.InitialResources parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.InitialResources parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.InitialResources parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.InitialResources parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.InitialResources parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.InitialResources parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MechMania17.Mm17.InitialResources prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private MechMania17.Mm17.InitialResources result;
      
      // Construct using MechMania17.Mm17.InitialResources.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new MechMania17.Mm17.InitialResources();
        return builder;
      }
      
      protected MechMania17.Mm17.InitialResources internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new MechMania17.Mm17.InitialResources();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MechMania17.Mm17.InitialResources.getDescriptor();
      }
      
      public MechMania17.Mm17.InitialResources getDefaultInstanceForType() {
        return MechMania17.Mm17.InitialResources.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public MechMania17.Mm17.InitialResources build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private MechMania17.Mm17.InitialResources buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public MechMania17.Mm17.InitialResources buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.tiles_ != java.util.Collections.EMPTY_LIST) {
          result.tiles_ =
            java.util.Collections.unmodifiableList(result.tiles_);
        }
        MechMania17.Mm17.InitialResources returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MechMania17.Mm17.InitialResources) {
          return mergeFrom((MechMania17.Mm17.InitialResources)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(MechMania17.Mm17.InitialResources other) {
        if (other == MechMania17.Mm17.InitialResources.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasMapWidth()) {
          setMapWidth(other.getMapWidth());
        }
        if (!other.tiles_.isEmpty()) {
          if (result.tiles_.isEmpty()) {
            result.tiles_ = new java.util.ArrayList<MechMania17.Mm17.InitialResources.Tile>();
          }
          result.tiles_.addAll(other.tiles_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt32());
              break;
            }
            case 16: {
              setMapWidth(input.readInt32());
              break;
            }
            case 26: {
              MechMania17.Mm17.InitialResources.Tile.Builder subBuilder = MechMania17.Mm17.InitialResources.Tile.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTiles(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required int32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // required int32 map_width = 2;
      public boolean hasMapWidth() {
        return result.hasMapWidth();
      }
      public int getMapWidth() {
        return result.getMapWidth();
      }
      public Builder setMapWidth(int value) {
        result.hasMapWidth = true;
        result.mapWidth_ = value;
        return this;
      }
      public Builder clearMapWidth() {
        result.hasMapWidth = false;
        result.mapWidth_ = 0;
        return this;
      }
      
      // repeated .MechMania17.InitialResources.Tile tiles = 3;
      public java.util.List<MechMania17.Mm17.InitialResources.Tile> getTilesList() {
        return java.util.Collections.unmodifiableList(result.tiles_);
      }
      public int getTilesCount() {
        return result.getTilesCount();
      }
      public MechMania17.Mm17.InitialResources.Tile getTiles(int index) {
        return result.getTiles(index);
      }
      public Builder setTiles(int index, MechMania17.Mm17.InitialResources.Tile value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.tiles_.set(index, value);
        return this;
      }
      public Builder setTiles(int index, MechMania17.Mm17.InitialResources.Tile.Builder builderForValue) {
        result.tiles_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTiles(MechMania17.Mm17.InitialResources.Tile value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.tiles_.isEmpty()) {
          result.tiles_ = new java.util.ArrayList<MechMania17.Mm17.InitialResources.Tile>();
        }
        result.tiles_.add(value);
        return this;
      }
      public Builder addTiles(MechMania17.Mm17.InitialResources.Tile.Builder builderForValue) {
        if (result.tiles_.isEmpty()) {
          result.tiles_ = new java.util.ArrayList<MechMania17.Mm17.InitialResources.Tile>();
        }
        result.tiles_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTiles(
          java.lang.Iterable<? extends MechMania17.Mm17.InitialResources.Tile> values) {
        if (result.tiles_.isEmpty()) {
          result.tiles_ = new java.util.ArrayList<MechMania17.Mm17.InitialResources.Tile>();
        }
        super.addAll(values, result.tiles_);
        return this;
      }
      public Builder clearTiles() {
        result.tiles_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MechMania17.InitialResources)
    }
    
    static {
      defaultInstance = new InitialResources(true);
      MechMania17.Mm17.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MechMania17.InitialResources)
  }
  
  public static final class Command extends
      com.google.protobuf.GeneratedMessage {
    // Use Command.newBuilder() to construct.
    private Command() {
      initFields();
    }
    private Command(boolean noInit) {}
    
    private static final Command defaultInstance;
    public static Command getDefaultInstance() {
      return defaultInstance;
    }
    
    public Command getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MechMania17.Mm17.internal_static_MechMania17_Command_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MechMania17.Mm17.internal_static_MechMania17_Command_fieldAccessorTable;
    }
    
    public enum Direction
        implements com.google.protobuf.ProtocolMessageEnum {
      NORTH(0, 0),
      EAST(1, 1),
      WEST(2, 2),
      SOUTH(3, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Direction valueOf(int value) {
        switch (value) {
          case 0: return NORTH;
          case 1: return EAST;
          case 2: return WEST;
          case 3: return SOUTH;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Direction>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Direction>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Direction>() {
              public Direction findValueByNumber(int number) {
                return Direction.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return MechMania17.Mm17.Command.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Direction[] VALUES = {
        NORTH, EAST, WEST, SOUTH, 
      };
      public static Direction valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Direction(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        MechMania17.Mm17.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:MechMania17.Command.Direction)
    }
    
    public static final class SurrenderCommand extends
        com.google.protobuf.GeneratedMessage {
      // Use SurrenderCommand.newBuilder() to construct.
      private SurrenderCommand() {
        initFields();
      }
      private SurrenderCommand(boolean noInit) {}
      
      private static final SurrenderCommand defaultInstance;
      public static SurrenderCommand getDefaultInstance() {
        return defaultInstance;
      }
      
      public SurrenderCommand getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_SurrenderCommand_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_SurrenderCommand_fieldAccessorTable;
      }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static MechMania17.Mm17.Command.SurrenderCommand parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.SurrenderCommand parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.SurrenderCommand parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.SurrenderCommand parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.SurrenderCommand parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.SurrenderCommand parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.SurrenderCommand parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.SurrenderCommand parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.SurrenderCommand parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.SurrenderCommand parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MechMania17.Mm17.Command.SurrenderCommand prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private MechMania17.Mm17.Command.SurrenderCommand result;
        
        // Construct using MechMania17.Mm17.Command.SurrenderCommand.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new MechMania17.Mm17.Command.SurrenderCommand();
          return builder;
        }
        
        protected MechMania17.Mm17.Command.SurrenderCommand internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new MechMania17.Mm17.Command.SurrenderCommand();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MechMania17.Mm17.Command.SurrenderCommand.getDescriptor();
        }
        
        public MechMania17.Mm17.Command.SurrenderCommand getDefaultInstanceForType() {
          return MechMania17.Mm17.Command.SurrenderCommand.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public MechMania17.Mm17.Command.SurrenderCommand build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private MechMania17.Mm17.Command.SurrenderCommand buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public MechMania17.Mm17.Command.SurrenderCommand buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          MechMania17.Mm17.Command.SurrenderCommand returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MechMania17.Mm17.Command.SurrenderCommand) {
            return mergeFrom((MechMania17.Mm17.Command.SurrenderCommand)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(MechMania17.Mm17.Command.SurrenderCommand other) {
          if (other == MechMania17.Mm17.Command.SurrenderCommand.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
            }
          }
        }
        
        
        // @@protoc_insertion_point(builder_scope:MechMania17.Command.SurrenderCommand)
      }
      
      static {
        defaultInstance = new SurrenderCommand(true);
        MechMania17.Mm17.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MechMania17.Command.SurrenderCommand)
    }
    
    public static final class AttackCommand extends
        com.google.protobuf.GeneratedMessage {
      // Use AttackCommand.newBuilder() to construct.
      private AttackCommand() {
        initFields();
      }
      private AttackCommand(boolean noInit) {}
      
      private static final AttackCommand defaultInstance;
      public static AttackCommand getDefaultInstance() {
        return defaultInstance;
      }
      
      public AttackCommand getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_AttackCommand_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_AttackCommand_fieldAccessorTable;
      }
      
      // required int32 source = 1;
      public static final int SOURCE_FIELD_NUMBER = 1;
      private boolean hasSource;
      private int source_ = 0;
      public boolean hasSource() { return hasSource; }
      public int getSource() { return source_; }
      
      // required int32 target = 2;
      public static final int TARGET_FIELD_NUMBER = 2;
      private boolean hasTarget;
      private int target_ = 0;
      public boolean hasTarget() { return hasTarget; }
      public int getTarget() { return target_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasSource) return false;
        if (!hasTarget) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasSource()) {
          output.writeInt32(1, getSource());
        }
        if (hasTarget()) {
          output.writeInt32(2, getTarget());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasSource()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getSource());
        }
        if (hasTarget()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getTarget());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static MechMania17.Mm17.Command.AttackCommand parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.AttackCommand parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.AttackCommand parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.AttackCommand parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.AttackCommand parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.AttackCommand parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.AttackCommand parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.AttackCommand parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.AttackCommand parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.AttackCommand parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MechMania17.Mm17.Command.AttackCommand prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private MechMania17.Mm17.Command.AttackCommand result;
        
        // Construct using MechMania17.Mm17.Command.AttackCommand.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new MechMania17.Mm17.Command.AttackCommand();
          return builder;
        }
        
        protected MechMania17.Mm17.Command.AttackCommand internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new MechMania17.Mm17.Command.AttackCommand();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MechMania17.Mm17.Command.AttackCommand.getDescriptor();
        }
        
        public MechMania17.Mm17.Command.AttackCommand getDefaultInstanceForType() {
          return MechMania17.Mm17.Command.AttackCommand.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public MechMania17.Mm17.Command.AttackCommand build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private MechMania17.Mm17.Command.AttackCommand buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public MechMania17.Mm17.Command.AttackCommand buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          MechMania17.Mm17.Command.AttackCommand returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MechMania17.Mm17.Command.AttackCommand) {
            return mergeFrom((MechMania17.Mm17.Command.AttackCommand)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(MechMania17.Mm17.Command.AttackCommand other) {
          if (other == MechMania17.Mm17.Command.AttackCommand.getDefaultInstance()) return this;
          if (other.hasSource()) {
            setSource(other.getSource());
          }
          if (other.hasTarget()) {
            setTarget(other.getTarget());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setSource(input.readInt32());
                break;
              }
              case 16: {
                setTarget(input.readInt32());
                break;
              }
            }
          }
        }
        
        
        // required int32 source = 1;
        public boolean hasSource() {
          return result.hasSource();
        }
        public int getSource() {
          return result.getSource();
        }
        public Builder setSource(int value) {
          result.hasSource = true;
          result.source_ = value;
          return this;
        }
        public Builder clearSource() {
          result.hasSource = false;
          result.source_ = 0;
          return this;
        }
        
        // required int32 target = 2;
        public boolean hasTarget() {
          return result.hasTarget();
        }
        public int getTarget() {
          return result.getTarget();
        }
        public Builder setTarget(int value) {
          result.hasTarget = true;
          result.target_ = value;
          return this;
        }
        public Builder clearTarget() {
          result.hasTarget = false;
          result.target_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MechMania17.Command.AttackCommand)
      }
      
      static {
        defaultInstance = new AttackCommand(true);
        MechMania17.Mm17.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MechMania17.Command.AttackCommand)
    }
    
    public static final class MoveCommand extends
        com.google.protobuf.GeneratedMessage {
      // Use MoveCommand.newBuilder() to construct.
      private MoveCommand() {
        initFields();
      }
      private MoveCommand(boolean noInit) {}
      
      private static final MoveCommand defaultInstance;
      public static MoveCommand getDefaultInstance() {
        return defaultInstance;
      }
      
      public MoveCommand getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_MoveCommand_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_MoveCommand_fieldAccessorTable;
      }
      
      // required int32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private boolean hasId;
      private int id_ = 0;
      public boolean hasId() { return hasId; }
      public int getId() { return id_; }
      
      // required .MechMania17.Command.Direction direction = 2;
      public static final int DIRECTION_FIELD_NUMBER = 2;
      private boolean hasDirection;
      private MechMania17.Mm17.Command.Direction direction_;
      public boolean hasDirection() { return hasDirection; }
      public MechMania17.Mm17.Command.Direction getDirection() { return direction_; }
      
      private void initFields() {
        direction_ = MechMania17.Mm17.Command.Direction.NORTH;
      }
      public final boolean isInitialized() {
        if (!hasId) return false;
        if (!hasDirection) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasId()) {
          output.writeInt32(1, getId());
        }
        if (hasDirection()) {
          output.writeEnum(2, getDirection().getNumber());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getId());
        }
        if (hasDirection()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, getDirection().getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static MechMania17.Mm17.Command.MoveCommand parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.MoveCommand parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.MoveCommand parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.MoveCommand parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.MoveCommand parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.MoveCommand parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.MoveCommand parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.MoveCommand parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.MoveCommand parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.MoveCommand parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MechMania17.Mm17.Command.MoveCommand prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private MechMania17.Mm17.Command.MoveCommand result;
        
        // Construct using MechMania17.Mm17.Command.MoveCommand.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new MechMania17.Mm17.Command.MoveCommand();
          return builder;
        }
        
        protected MechMania17.Mm17.Command.MoveCommand internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new MechMania17.Mm17.Command.MoveCommand();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MechMania17.Mm17.Command.MoveCommand.getDescriptor();
        }
        
        public MechMania17.Mm17.Command.MoveCommand getDefaultInstanceForType() {
          return MechMania17.Mm17.Command.MoveCommand.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public MechMania17.Mm17.Command.MoveCommand build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private MechMania17.Mm17.Command.MoveCommand buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public MechMania17.Mm17.Command.MoveCommand buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          MechMania17.Mm17.Command.MoveCommand returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MechMania17.Mm17.Command.MoveCommand) {
            return mergeFrom((MechMania17.Mm17.Command.MoveCommand)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(MechMania17.Mm17.Command.MoveCommand other) {
          if (other == MechMania17.Mm17.Command.MoveCommand.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasDirection()) {
            setDirection(other.getDirection());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setId(input.readInt32());
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                MechMania17.Mm17.Command.Direction value = MechMania17.Mm17.Command.Direction.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  setDirection(value);
                }
                break;
              }
            }
          }
        }
        
        
        // required int32 id = 1;
        public boolean hasId() {
          return result.hasId();
        }
        public int getId() {
          return result.getId();
        }
        public Builder setId(int value) {
          result.hasId = true;
          result.id_ = value;
          return this;
        }
        public Builder clearId() {
          result.hasId = false;
          result.id_ = 0;
          return this;
        }
        
        // required .MechMania17.Command.Direction direction = 2;
        public boolean hasDirection() {
          return result.hasDirection();
        }
        public MechMania17.Mm17.Command.Direction getDirection() {
          return result.getDirection();
        }
        public Builder setDirection(MechMania17.Mm17.Command.Direction value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasDirection = true;
          result.direction_ = value;
          return this;
        }
        public Builder clearDirection() {
          result.hasDirection = false;
          result.direction_ = MechMania17.Mm17.Command.Direction.NORTH;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MechMania17.Command.MoveCommand)
      }
      
      static {
        defaultInstance = new MoveCommand(true);
        MechMania17.Mm17.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MechMania17.Command.MoveCommand)
    }
    
    public static final class SummonCommand extends
        com.google.protobuf.GeneratedMessage {
      // Use SummonCommand.newBuilder() to construct.
      private SummonCommand() {
        initFields();
      }
      private SummonCommand(boolean noInit) {}
      
      private static final SummonCommand defaultInstance;
      public static SummonCommand getDefaultInstance() {
        return defaultInstance;
      }
      
      public SummonCommand getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_SummonCommand_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_SummonCommand_fieldAccessorTable;
      }
      
      // required int32 hp = 1;
      public static final int HP_FIELD_NUMBER = 1;
      private boolean hasHp;
      private int hp_ = 0;
      public boolean hasHp() { return hasHp; }
      public int getHp() { return hp_; }
      
      // required int32 damage = 2;
      public static final int DAMAGE_FIELD_NUMBER = 2;
      private boolean hasDamage;
      private int damage_ = 0;
      public boolean hasDamage() { return hasDamage; }
      public int getDamage() { return damage_; }
      
      // required int32 range = 3;
      public static final int RANGE_FIELD_NUMBER = 3;
      private boolean hasRange;
      private int range_ = 0;
      public boolean hasRange() { return hasRange; }
      public int getRange() { return range_; }
      
      // required int32 vision = 4;
      public static final int VISION_FIELD_NUMBER = 4;
      private boolean hasVision;
      private int vision_ = 0;
      public boolean hasVision() { return hasVision; }
      public int getVision() { return vision_; }
      
      // required int32 x = 5;
      public static final int X_FIELD_NUMBER = 5;
      private boolean hasX;
      private int x_ = 0;
      public boolean hasX() { return hasX; }
      public int getX() { return x_; }
      
      // required int32 y = 6;
      public static final int Y_FIELD_NUMBER = 6;
      private boolean hasY;
      private int y_ = 0;
      public boolean hasY() { return hasY; }
      public int getY() { return y_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasHp) return false;
        if (!hasDamage) return false;
        if (!hasRange) return false;
        if (!hasVision) return false;
        if (!hasX) return false;
        if (!hasY) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasHp()) {
          output.writeInt32(1, getHp());
        }
        if (hasDamage()) {
          output.writeInt32(2, getDamage());
        }
        if (hasRange()) {
          output.writeInt32(3, getRange());
        }
        if (hasVision()) {
          output.writeInt32(4, getVision());
        }
        if (hasX()) {
          output.writeInt32(5, getX());
        }
        if (hasY()) {
          output.writeInt32(6, getY());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasHp()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getHp());
        }
        if (hasDamage()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getDamage());
        }
        if (hasRange()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, getRange());
        }
        if (hasVision()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, getVision());
        }
        if (hasX()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, getX());
        }
        if (hasY()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, getY());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static MechMania17.Mm17.Command.SummonCommand parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.SummonCommand parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.SummonCommand parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.SummonCommand parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.SummonCommand parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.SummonCommand parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.SummonCommand parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.SummonCommand parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.SummonCommand parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.SummonCommand parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MechMania17.Mm17.Command.SummonCommand prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private MechMania17.Mm17.Command.SummonCommand result;
        
        // Construct using MechMania17.Mm17.Command.SummonCommand.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new MechMania17.Mm17.Command.SummonCommand();
          return builder;
        }
        
        protected MechMania17.Mm17.Command.SummonCommand internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new MechMania17.Mm17.Command.SummonCommand();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MechMania17.Mm17.Command.SummonCommand.getDescriptor();
        }
        
        public MechMania17.Mm17.Command.SummonCommand getDefaultInstanceForType() {
          return MechMania17.Mm17.Command.SummonCommand.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public MechMania17.Mm17.Command.SummonCommand build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private MechMania17.Mm17.Command.SummonCommand buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public MechMania17.Mm17.Command.SummonCommand buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          MechMania17.Mm17.Command.SummonCommand returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MechMania17.Mm17.Command.SummonCommand) {
            return mergeFrom((MechMania17.Mm17.Command.SummonCommand)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(MechMania17.Mm17.Command.SummonCommand other) {
          if (other == MechMania17.Mm17.Command.SummonCommand.getDefaultInstance()) return this;
          if (other.hasHp()) {
            setHp(other.getHp());
          }
          if (other.hasDamage()) {
            setDamage(other.getDamage());
          }
          if (other.hasRange()) {
            setRange(other.getRange());
          }
          if (other.hasVision()) {
            setVision(other.getVision());
          }
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setHp(input.readInt32());
                break;
              }
              case 16: {
                setDamage(input.readInt32());
                break;
              }
              case 24: {
                setRange(input.readInt32());
                break;
              }
              case 32: {
                setVision(input.readInt32());
                break;
              }
              case 40: {
                setX(input.readInt32());
                break;
              }
              case 48: {
                setY(input.readInt32());
                break;
              }
            }
          }
        }
        
        
        // required int32 hp = 1;
        public boolean hasHp() {
          return result.hasHp();
        }
        public int getHp() {
          return result.getHp();
        }
        public Builder setHp(int value) {
          result.hasHp = true;
          result.hp_ = value;
          return this;
        }
        public Builder clearHp() {
          result.hasHp = false;
          result.hp_ = 0;
          return this;
        }
        
        // required int32 damage = 2;
        public boolean hasDamage() {
          return result.hasDamage();
        }
        public int getDamage() {
          return result.getDamage();
        }
        public Builder setDamage(int value) {
          result.hasDamage = true;
          result.damage_ = value;
          return this;
        }
        public Builder clearDamage() {
          result.hasDamage = false;
          result.damage_ = 0;
          return this;
        }
        
        // required int32 range = 3;
        public boolean hasRange() {
          return result.hasRange();
        }
        public int getRange() {
          return result.getRange();
        }
        public Builder setRange(int value) {
          result.hasRange = true;
          result.range_ = value;
          return this;
        }
        public Builder clearRange() {
          result.hasRange = false;
          result.range_ = 0;
          return this;
        }
        
        // required int32 vision = 4;
        public boolean hasVision() {
          return result.hasVision();
        }
        public int getVision() {
          return result.getVision();
        }
        public Builder setVision(int value) {
          result.hasVision = true;
          result.vision_ = value;
          return this;
        }
        public Builder clearVision() {
          result.hasVision = false;
          result.vision_ = 0;
          return this;
        }
        
        // required int32 x = 5;
        public boolean hasX() {
          return result.hasX();
        }
        public int getX() {
          return result.getX();
        }
        public Builder setX(int value) {
          result.hasX = true;
          result.x_ = value;
          return this;
        }
        public Builder clearX() {
          result.hasX = false;
          result.x_ = 0;
          return this;
        }
        
        // required int32 y = 6;
        public boolean hasY() {
          return result.hasY();
        }
        public int getY() {
          return result.getY();
        }
        public Builder setY(int value) {
          result.hasY = true;
          result.y_ = value;
          return this;
        }
        public Builder clearY() {
          result.hasY = false;
          result.y_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MechMania17.Command.SummonCommand)
      }
      
      static {
        defaultInstance = new SummonCommand(true);
        MechMania17.Mm17.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MechMania17.Command.SummonCommand)
    }
    
    public static final class LoadSubCommand extends
        com.google.protobuf.GeneratedMessage {
      // Use LoadSubCommand.newBuilder() to construct.
      private LoadSubCommand() {
        initFields();
      }
      private LoadSubCommand(boolean noInit) {}
      
      private static final LoadSubCommand defaultInstance;
      public static LoadSubCommand getDefaultInstance() {
        return defaultInstance;
      }
      
      public LoadSubCommand getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_LoadSubCommand_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_LoadSubCommand_fieldAccessorTable;
      }
      
      // required int32 submarine = 1;
      public static final int SUBMARINE_FIELD_NUMBER = 1;
      private boolean hasSubmarine;
      private int submarine_ = 0;
      public boolean hasSubmarine() { return hasSubmarine; }
      public int getSubmarine() { return submarine_; }
      
      // required int32 unit = 2;
      public static final int UNIT_FIELD_NUMBER = 2;
      private boolean hasUnit;
      private int unit_ = 0;
      public boolean hasUnit() { return hasUnit; }
      public int getUnit() { return unit_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasSubmarine) return false;
        if (!hasUnit) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasSubmarine()) {
          output.writeInt32(1, getSubmarine());
        }
        if (hasUnit()) {
          output.writeInt32(2, getUnit());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasSubmarine()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getSubmarine());
        }
        if (hasUnit()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getUnit());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static MechMania17.Mm17.Command.LoadSubCommand parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.LoadSubCommand parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.LoadSubCommand parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.LoadSubCommand parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.LoadSubCommand parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.LoadSubCommand parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.LoadSubCommand parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.LoadSubCommand parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.LoadSubCommand parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.LoadSubCommand parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MechMania17.Mm17.Command.LoadSubCommand prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private MechMania17.Mm17.Command.LoadSubCommand result;
        
        // Construct using MechMania17.Mm17.Command.LoadSubCommand.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new MechMania17.Mm17.Command.LoadSubCommand();
          return builder;
        }
        
        protected MechMania17.Mm17.Command.LoadSubCommand internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new MechMania17.Mm17.Command.LoadSubCommand();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MechMania17.Mm17.Command.LoadSubCommand.getDescriptor();
        }
        
        public MechMania17.Mm17.Command.LoadSubCommand getDefaultInstanceForType() {
          return MechMania17.Mm17.Command.LoadSubCommand.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public MechMania17.Mm17.Command.LoadSubCommand build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private MechMania17.Mm17.Command.LoadSubCommand buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public MechMania17.Mm17.Command.LoadSubCommand buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          MechMania17.Mm17.Command.LoadSubCommand returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MechMania17.Mm17.Command.LoadSubCommand) {
            return mergeFrom((MechMania17.Mm17.Command.LoadSubCommand)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(MechMania17.Mm17.Command.LoadSubCommand other) {
          if (other == MechMania17.Mm17.Command.LoadSubCommand.getDefaultInstance()) return this;
          if (other.hasSubmarine()) {
            setSubmarine(other.getSubmarine());
          }
          if (other.hasUnit()) {
            setUnit(other.getUnit());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setSubmarine(input.readInt32());
                break;
              }
              case 16: {
                setUnit(input.readInt32());
                break;
              }
            }
          }
        }
        
        
        // required int32 submarine = 1;
        public boolean hasSubmarine() {
          return result.hasSubmarine();
        }
        public int getSubmarine() {
          return result.getSubmarine();
        }
        public Builder setSubmarine(int value) {
          result.hasSubmarine = true;
          result.submarine_ = value;
          return this;
        }
        public Builder clearSubmarine() {
          result.hasSubmarine = false;
          result.submarine_ = 0;
          return this;
        }
        
        // required int32 unit = 2;
        public boolean hasUnit() {
          return result.hasUnit();
        }
        public int getUnit() {
          return result.getUnit();
        }
        public Builder setUnit(int value) {
          result.hasUnit = true;
          result.unit_ = value;
          return this;
        }
        public Builder clearUnit() {
          result.hasUnit = false;
          result.unit_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MechMania17.Command.LoadSubCommand)
      }
      
      static {
        defaultInstance = new LoadSubCommand(true);
        MechMania17.Mm17.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MechMania17.Command.LoadSubCommand)
    }
    
    public static final class MoveSubCommand extends
        com.google.protobuf.GeneratedMessage {
      // Use MoveSubCommand.newBuilder() to construct.
      private MoveSubCommand() {
        initFields();
      }
      private MoveSubCommand(boolean noInit) {}
      
      private static final MoveSubCommand defaultInstance;
      public static MoveSubCommand getDefaultInstance() {
        return defaultInstance;
      }
      
      public MoveSubCommand getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_MoveSubCommand_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_MoveSubCommand_fieldAccessorTable;
      }
      
      // required int32 submarine = 1;
      public static final int SUBMARINE_FIELD_NUMBER = 1;
      private boolean hasSubmarine;
      private int submarine_ = 0;
      public boolean hasSubmarine() { return hasSubmarine; }
      public int getSubmarine() { return submarine_; }
      
      // required int32 x = 2;
      public static final int X_FIELD_NUMBER = 2;
      private boolean hasX;
      private int x_ = 0;
      public boolean hasX() { return hasX; }
      public int getX() { return x_; }
      
      // required int32 y = 3;
      public static final int Y_FIELD_NUMBER = 3;
      private boolean hasY;
      private int y_ = 0;
      public boolean hasY() { return hasY; }
      public int getY() { return y_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasSubmarine) return false;
        if (!hasX) return false;
        if (!hasY) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasSubmarine()) {
          output.writeInt32(1, getSubmarine());
        }
        if (hasX()) {
          output.writeInt32(2, getX());
        }
        if (hasY()) {
          output.writeInt32(3, getY());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasSubmarine()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getSubmarine());
        }
        if (hasX()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getX());
        }
        if (hasY()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, getY());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static MechMania17.Mm17.Command.MoveSubCommand parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.MoveSubCommand parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.MoveSubCommand parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.MoveSubCommand parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.MoveSubCommand parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.MoveSubCommand parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.MoveSubCommand parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.MoveSubCommand parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.MoveSubCommand parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.MoveSubCommand parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MechMania17.Mm17.Command.MoveSubCommand prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private MechMania17.Mm17.Command.MoveSubCommand result;
        
        // Construct using MechMania17.Mm17.Command.MoveSubCommand.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new MechMania17.Mm17.Command.MoveSubCommand();
          return builder;
        }
        
        protected MechMania17.Mm17.Command.MoveSubCommand internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new MechMania17.Mm17.Command.MoveSubCommand();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MechMania17.Mm17.Command.MoveSubCommand.getDescriptor();
        }
        
        public MechMania17.Mm17.Command.MoveSubCommand getDefaultInstanceForType() {
          return MechMania17.Mm17.Command.MoveSubCommand.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public MechMania17.Mm17.Command.MoveSubCommand build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private MechMania17.Mm17.Command.MoveSubCommand buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public MechMania17.Mm17.Command.MoveSubCommand buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          MechMania17.Mm17.Command.MoveSubCommand returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MechMania17.Mm17.Command.MoveSubCommand) {
            return mergeFrom((MechMania17.Mm17.Command.MoveSubCommand)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(MechMania17.Mm17.Command.MoveSubCommand other) {
          if (other == MechMania17.Mm17.Command.MoveSubCommand.getDefaultInstance()) return this;
          if (other.hasSubmarine()) {
            setSubmarine(other.getSubmarine());
          }
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setSubmarine(input.readInt32());
                break;
              }
              case 16: {
                setX(input.readInt32());
                break;
              }
              case 24: {
                setY(input.readInt32());
                break;
              }
            }
          }
        }
        
        
        // required int32 submarine = 1;
        public boolean hasSubmarine() {
          return result.hasSubmarine();
        }
        public int getSubmarine() {
          return result.getSubmarine();
        }
        public Builder setSubmarine(int value) {
          result.hasSubmarine = true;
          result.submarine_ = value;
          return this;
        }
        public Builder clearSubmarine() {
          result.hasSubmarine = false;
          result.submarine_ = 0;
          return this;
        }
        
        // required int32 x = 2;
        public boolean hasX() {
          return result.hasX();
        }
        public int getX() {
          return result.getX();
        }
        public Builder setX(int value) {
          result.hasX = true;
          result.x_ = value;
          return this;
        }
        public Builder clearX() {
          result.hasX = false;
          result.x_ = 0;
          return this;
        }
        
        // required int32 y = 3;
        public boolean hasY() {
          return result.hasY();
        }
        public int getY() {
          return result.getY();
        }
        public Builder setY(int value) {
          result.hasY = true;
          result.y_ = value;
          return this;
        }
        public Builder clearY() {
          result.hasY = false;
          result.y_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MechMania17.Command.MoveSubCommand)
      }
      
      static {
        defaultInstance = new MoveSubCommand(true);
        MechMania17.Mm17.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MechMania17.Command.MoveSubCommand)
    }
    
    public static final class SummonSubCommand extends
        com.google.protobuf.GeneratedMessage {
      // Use SummonSubCommand.newBuilder() to construct.
      private SummonSubCommand() {
        initFields();
      }
      private SummonSubCommand(boolean noInit) {}
      
      private static final SummonSubCommand defaultInstance;
      public static SummonSubCommand getDefaultInstance() {
        return defaultInstance;
      }
      
      public SummonSubCommand getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_SummonSubCommand_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_SummonSubCommand_fieldAccessorTable;
      }
      
      // required int32 x = 1;
      public static final int X_FIELD_NUMBER = 1;
      private boolean hasX;
      private int x_ = 0;
      public boolean hasX() { return hasX; }
      public int getX() { return x_; }
      
      // required int32 y = 2;
      public static final int Y_FIELD_NUMBER = 2;
      private boolean hasY;
      private int y_ = 0;
      public boolean hasY() { return hasY; }
      public int getY() { return y_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasX) return false;
        if (!hasY) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasX()) {
          output.writeInt32(1, getX());
        }
        if (hasY()) {
          output.writeInt32(2, getY());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasX()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getX());
        }
        if (hasY()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getY());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static MechMania17.Mm17.Command.SummonSubCommand parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.SummonSubCommand parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.SummonSubCommand parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.SummonSubCommand parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.SummonSubCommand parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.SummonSubCommand parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.SummonSubCommand parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.SummonSubCommand parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.SummonSubCommand parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.SummonSubCommand parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MechMania17.Mm17.Command.SummonSubCommand prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private MechMania17.Mm17.Command.SummonSubCommand result;
        
        // Construct using MechMania17.Mm17.Command.SummonSubCommand.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new MechMania17.Mm17.Command.SummonSubCommand();
          return builder;
        }
        
        protected MechMania17.Mm17.Command.SummonSubCommand internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new MechMania17.Mm17.Command.SummonSubCommand();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MechMania17.Mm17.Command.SummonSubCommand.getDescriptor();
        }
        
        public MechMania17.Mm17.Command.SummonSubCommand getDefaultInstanceForType() {
          return MechMania17.Mm17.Command.SummonSubCommand.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public MechMania17.Mm17.Command.SummonSubCommand build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private MechMania17.Mm17.Command.SummonSubCommand buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public MechMania17.Mm17.Command.SummonSubCommand buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          MechMania17.Mm17.Command.SummonSubCommand returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MechMania17.Mm17.Command.SummonSubCommand) {
            return mergeFrom((MechMania17.Mm17.Command.SummonSubCommand)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(MechMania17.Mm17.Command.SummonSubCommand other) {
          if (other == MechMania17.Mm17.Command.SummonSubCommand.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setX(input.readInt32());
                break;
              }
              case 16: {
                setY(input.readInt32());
                break;
              }
            }
          }
        }
        
        
        // required int32 x = 1;
        public boolean hasX() {
          return result.hasX();
        }
        public int getX() {
          return result.getX();
        }
        public Builder setX(int value) {
          result.hasX = true;
          result.x_ = value;
          return this;
        }
        public Builder clearX() {
          result.hasX = false;
          result.x_ = 0;
          return this;
        }
        
        // required int32 y = 2;
        public boolean hasY() {
          return result.hasY();
        }
        public int getY() {
          return result.getY();
        }
        public Builder setY(int value) {
          result.hasY = true;
          result.y_ = value;
          return this;
        }
        public Builder clearY() {
          result.hasY = false;
          result.y_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MechMania17.Command.SummonSubCommand)
      }
      
      static {
        defaultInstance = new SummonSubCommand(true);
        MechMania17.Mm17.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MechMania17.Command.SummonSubCommand)
    }
    
    public static final class AttachSubCommand extends
        com.google.protobuf.GeneratedMessage {
      // Use AttachSubCommand.newBuilder() to construct.
      private AttachSubCommand() {
        initFields();
      }
      private AttachSubCommand(boolean noInit) {}
      
      private static final AttachSubCommand defaultInstance;
      public static AttachSubCommand getDefaultInstance() {
        return defaultInstance;
      }
      
      public AttachSubCommand getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_AttachSubCommand_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MechMania17.Mm17.internal_static_MechMania17_Command_AttachSubCommand_fieldAccessorTable;
      }
      
      // required int32 submarine = 1;
      public static final int SUBMARINE_FIELD_NUMBER = 1;
      private boolean hasSubmarine;
      private int submarine_ = 0;
      public boolean hasSubmarine() { return hasSubmarine; }
      public int getSubmarine() { return submarine_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasSubmarine) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasSubmarine()) {
          output.writeInt32(1, getSubmarine());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasSubmarine()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getSubmarine());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static MechMania17.Mm17.Command.AttachSubCommand parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.AttachSubCommand parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.AttachSubCommand parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.Command.AttachSubCommand parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.AttachSubCommand parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.AttachSubCommand parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.Command.AttachSubCommand parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.AttachSubCommand parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.Command.AttachSubCommand parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.Command.AttachSubCommand parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MechMania17.Mm17.Command.AttachSubCommand prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private MechMania17.Mm17.Command.AttachSubCommand result;
        
        // Construct using MechMania17.Mm17.Command.AttachSubCommand.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new MechMania17.Mm17.Command.AttachSubCommand();
          return builder;
        }
        
        protected MechMania17.Mm17.Command.AttachSubCommand internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new MechMania17.Mm17.Command.AttachSubCommand();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MechMania17.Mm17.Command.AttachSubCommand.getDescriptor();
        }
        
        public MechMania17.Mm17.Command.AttachSubCommand getDefaultInstanceForType() {
          return MechMania17.Mm17.Command.AttachSubCommand.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public MechMania17.Mm17.Command.AttachSubCommand build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private MechMania17.Mm17.Command.AttachSubCommand buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public MechMania17.Mm17.Command.AttachSubCommand buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          MechMania17.Mm17.Command.AttachSubCommand returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MechMania17.Mm17.Command.AttachSubCommand) {
            return mergeFrom((MechMania17.Mm17.Command.AttachSubCommand)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(MechMania17.Mm17.Command.AttachSubCommand other) {
          if (other == MechMania17.Mm17.Command.AttachSubCommand.getDefaultInstance()) return this;
          if (other.hasSubmarine()) {
            setSubmarine(other.getSubmarine());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setSubmarine(input.readInt32());
                break;
              }
            }
          }
        }
        
        
        // required int32 submarine = 1;
        public boolean hasSubmarine() {
          return result.hasSubmarine();
        }
        public int getSubmarine() {
          return result.getSubmarine();
        }
        public Builder setSubmarine(int value) {
          result.hasSubmarine = true;
          result.submarine_ = value;
          return this;
        }
        public Builder clearSubmarine() {
          result.hasSubmarine = false;
          result.submarine_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MechMania17.Command.AttachSubCommand)
      }
      
      static {
        defaultInstance = new AttachSubCommand(true);
        MechMania17.Mm17.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MechMania17.Command.AttachSubCommand)
    }
    
    // required .MechMania17.CommandType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private MechMania17.Mm17.CommandType type_;
    public boolean hasType() { return hasType; }
    public MechMania17.Mm17.CommandType getType() { return type_; }
    
    // optional .MechMania17.Command.SurrenderCommand surrender = 2;
    public static final int SURRENDER_FIELD_NUMBER = 2;
    private boolean hasSurrender;
    private MechMania17.Mm17.Command.SurrenderCommand surrender_;
    public boolean hasSurrender() { return hasSurrender; }
    public MechMania17.Mm17.Command.SurrenderCommand getSurrender() { return surrender_; }
    
    // optional .MechMania17.Command.AttackCommand attack = 3;
    public static final int ATTACK_FIELD_NUMBER = 3;
    private boolean hasAttack;
    private MechMania17.Mm17.Command.AttackCommand attack_;
    public boolean hasAttack() { return hasAttack; }
    public MechMania17.Mm17.Command.AttackCommand getAttack() { return attack_; }
    
    // optional .MechMania17.Command.MoveCommand move = 4;
    public static final int MOVE_FIELD_NUMBER = 4;
    private boolean hasMove;
    private MechMania17.Mm17.Command.MoveCommand move_;
    public boolean hasMove() { return hasMove; }
    public MechMania17.Mm17.Command.MoveCommand getMove() { return move_; }
    
    // optional .MechMania17.Command.SummonCommand summon = 5;
    public static final int SUMMON_FIELD_NUMBER = 5;
    private boolean hasSummon;
    private MechMania17.Mm17.Command.SummonCommand summon_;
    public boolean hasSummon() { return hasSummon; }
    public MechMania17.Mm17.Command.SummonCommand getSummon() { return summon_; }
    
    // optional .MechMania17.Command.LoadSubCommand load_sub = 6;
    public static final int LOAD_SUB_FIELD_NUMBER = 6;
    private boolean hasLoadSub;
    private MechMania17.Mm17.Command.LoadSubCommand loadSub_;
    public boolean hasLoadSub() { return hasLoadSub; }
    public MechMania17.Mm17.Command.LoadSubCommand getLoadSub() { return loadSub_; }
    
    // optional .MechMania17.Command.MoveSubCommand move_sub = 7;
    public static final int MOVE_SUB_FIELD_NUMBER = 7;
    private boolean hasMoveSub;
    private MechMania17.Mm17.Command.MoveSubCommand moveSub_;
    public boolean hasMoveSub() { return hasMoveSub; }
    public MechMania17.Mm17.Command.MoveSubCommand getMoveSub() { return moveSub_; }
    
    // optional .MechMania17.Command.SummonSubCommand summon_sub = 9;
    public static final int SUMMON_SUB_FIELD_NUMBER = 9;
    private boolean hasSummonSub;
    private MechMania17.Mm17.Command.SummonSubCommand summonSub_;
    public boolean hasSummonSub() { return hasSummonSub; }
    public MechMania17.Mm17.Command.SummonSubCommand getSummonSub() { return summonSub_; }
    
    // optional .MechMania17.Command.AttachSubCommand attach_sub = 10;
    public static final int ATTACH_SUB_FIELD_NUMBER = 10;
    private boolean hasAttachSub;
    private MechMania17.Mm17.Command.AttachSubCommand attachSub_;
    public boolean hasAttachSub() { return hasAttachSub; }
    public MechMania17.Mm17.Command.AttachSubCommand getAttachSub() { return attachSub_; }
    
    // optional bool succeeded = 11;
    public static final int SUCCEEDED_FIELD_NUMBER = 11;
    private boolean hasSucceeded;
    private boolean succeeded_ = false;
    public boolean hasSucceeded() { return hasSucceeded; }
    public boolean getSucceeded() { return succeeded_; }
    
    // optional int32 id = 13;
    public static final int ID_FIELD_NUMBER = 13;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    private void initFields() {
      type_ = MechMania17.Mm17.CommandType.SURRENDER;
      surrender_ = MechMania17.Mm17.Command.SurrenderCommand.getDefaultInstance();
      attack_ = MechMania17.Mm17.Command.AttackCommand.getDefaultInstance();
      move_ = MechMania17.Mm17.Command.MoveCommand.getDefaultInstance();
      summon_ = MechMania17.Mm17.Command.SummonCommand.getDefaultInstance();
      loadSub_ = MechMania17.Mm17.Command.LoadSubCommand.getDefaultInstance();
      moveSub_ = MechMania17.Mm17.Command.MoveSubCommand.getDefaultInstance();
      summonSub_ = MechMania17.Mm17.Command.SummonSubCommand.getDefaultInstance();
      attachSub_ = MechMania17.Mm17.Command.AttachSubCommand.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasType) return false;
      if (hasAttack()) {
        if (!getAttack().isInitialized()) return false;
      }
      if (hasMove()) {
        if (!getMove().isInitialized()) return false;
      }
      if (hasSummon()) {
        if (!getSummon().isInitialized()) return false;
      }
      if (hasLoadSub()) {
        if (!getLoadSub().isInitialized()) return false;
      }
      if (hasMoveSub()) {
        if (!getMoveSub().isInitialized()) return false;
      }
      if (hasSummonSub()) {
        if (!getSummonSub().isInitialized()) return false;
      }
      if (hasAttachSub()) {
        if (!getAttachSub().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasType()) {
        output.writeEnum(1, getType().getNumber());
      }
      if (hasSurrender()) {
        output.writeMessage(2, getSurrender());
      }
      if (hasAttack()) {
        output.writeMessage(3, getAttack());
      }
      if (hasMove()) {
        output.writeMessage(4, getMove());
      }
      if (hasSummon()) {
        output.writeMessage(5, getSummon());
      }
      if (hasLoadSub()) {
        output.writeMessage(6, getLoadSub());
      }
      if (hasMoveSub()) {
        output.writeMessage(7, getMoveSub());
      }
      if (hasSummonSub()) {
        output.writeMessage(9, getSummonSub());
      }
      if (hasAttachSub()) {
        output.writeMessage(10, getAttachSub());
      }
      if (hasSucceeded()) {
        output.writeBool(11, getSucceeded());
      }
      if (hasId()) {
        output.writeInt32(13, getId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getType().getNumber());
      }
      if (hasSurrender()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSurrender());
      }
      if (hasAttack()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAttack());
      }
      if (hasMove()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getMove());
      }
      if (hasSummon()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSummon());
      }
      if (hasLoadSub()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getLoadSub());
      }
      if (hasMoveSub()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getMoveSub());
      }
      if (hasSummonSub()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getSummonSub());
      }
      if (hasAttachSub()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getAttachSub());
      }
      if (hasSucceeded()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, getSucceeded());
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, getId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static MechMania17.Mm17.Command parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.Command parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.Command parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.Command parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.Command parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.Command parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.Command parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.Command parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.Command parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.Command parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MechMania17.Mm17.Command prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private MechMania17.Mm17.Command result;
      
      // Construct using MechMania17.Mm17.Command.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new MechMania17.Mm17.Command();
        return builder;
      }
      
      protected MechMania17.Mm17.Command internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new MechMania17.Mm17.Command();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MechMania17.Mm17.Command.getDescriptor();
      }
      
      public MechMania17.Mm17.Command getDefaultInstanceForType() {
        return MechMania17.Mm17.Command.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public MechMania17.Mm17.Command build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private MechMania17.Mm17.Command buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public MechMania17.Mm17.Command buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        MechMania17.Mm17.Command returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MechMania17.Mm17.Command) {
          return mergeFrom((MechMania17.Mm17.Command)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(MechMania17.Mm17.Command other) {
        if (other == MechMania17.Mm17.Command.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSurrender()) {
          mergeSurrender(other.getSurrender());
        }
        if (other.hasAttack()) {
          mergeAttack(other.getAttack());
        }
        if (other.hasMove()) {
          mergeMove(other.getMove());
        }
        if (other.hasSummon()) {
          mergeSummon(other.getSummon());
        }
        if (other.hasLoadSub()) {
          mergeLoadSub(other.getLoadSub());
        }
        if (other.hasMoveSub()) {
          mergeMoveSub(other.getMoveSub());
        }
        if (other.hasSummonSub()) {
          mergeSummonSub(other.getSummonSub());
        }
        if (other.hasAttachSub()) {
          mergeAttachSub(other.getAttachSub());
        }
        if (other.hasSucceeded()) {
          setSucceeded(other.getSucceeded());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              MechMania17.Mm17.CommandType value = MechMania17.Mm17.CommandType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 18: {
              MechMania17.Mm17.Command.SurrenderCommand.Builder subBuilder = MechMania17.Mm17.Command.SurrenderCommand.newBuilder();
              if (hasSurrender()) {
                subBuilder.mergeFrom(getSurrender());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSurrender(subBuilder.buildPartial());
              break;
            }
            case 26: {
              MechMania17.Mm17.Command.AttackCommand.Builder subBuilder = MechMania17.Mm17.Command.AttackCommand.newBuilder();
              if (hasAttack()) {
                subBuilder.mergeFrom(getAttack());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAttack(subBuilder.buildPartial());
              break;
            }
            case 34: {
              MechMania17.Mm17.Command.MoveCommand.Builder subBuilder = MechMania17.Mm17.Command.MoveCommand.newBuilder();
              if (hasMove()) {
                subBuilder.mergeFrom(getMove());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMove(subBuilder.buildPartial());
              break;
            }
            case 42: {
              MechMania17.Mm17.Command.SummonCommand.Builder subBuilder = MechMania17.Mm17.Command.SummonCommand.newBuilder();
              if (hasSummon()) {
                subBuilder.mergeFrom(getSummon());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSummon(subBuilder.buildPartial());
              break;
            }
            case 50: {
              MechMania17.Mm17.Command.LoadSubCommand.Builder subBuilder = MechMania17.Mm17.Command.LoadSubCommand.newBuilder();
              if (hasLoadSub()) {
                subBuilder.mergeFrom(getLoadSub());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLoadSub(subBuilder.buildPartial());
              break;
            }
            case 58: {
              MechMania17.Mm17.Command.MoveSubCommand.Builder subBuilder = MechMania17.Mm17.Command.MoveSubCommand.newBuilder();
              if (hasMoveSub()) {
                subBuilder.mergeFrom(getMoveSub());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMoveSub(subBuilder.buildPartial());
              break;
            }
            case 74: {
              MechMania17.Mm17.Command.SummonSubCommand.Builder subBuilder = MechMania17.Mm17.Command.SummonSubCommand.newBuilder();
              if (hasSummonSub()) {
                subBuilder.mergeFrom(getSummonSub());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSummonSub(subBuilder.buildPartial());
              break;
            }
            case 82: {
              MechMania17.Mm17.Command.AttachSubCommand.Builder subBuilder = MechMania17.Mm17.Command.AttachSubCommand.newBuilder();
              if (hasAttachSub()) {
                subBuilder.mergeFrom(getAttachSub());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAttachSub(subBuilder.buildPartial());
              break;
            }
            case 88: {
              setSucceeded(input.readBool());
              break;
            }
            case 104: {
              setId(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required .MechMania17.CommandType type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public MechMania17.Mm17.CommandType getType() {
        return result.getType();
      }
      public Builder setType(MechMania17.Mm17.CommandType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = MechMania17.Mm17.CommandType.SURRENDER;
        return this;
      }
      
      // optional .MechMania17.Command.SurrenderCommand surrender = 2;
      public boolean hasSurrender() {
        return result.hasSurrender();
      }
      public MechMania17.Mm17.Command.SurrenderCommand getSurrender() {
        return result.getSurrender();
      }
      public Builder setSurrender(MechMania17.Mm17.Command.SurrenderCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSurrender = true;
        result.surrender_ = value;
        return this;
      }
      public Builder setSurrender(MechMania17.Mm17.Command.SurrenderCommand.Builder builderForValue) {
        result.hasSurrender = true;
        result.surrender_ = builderForValue.build();
        return this;
      }
      public Builder mergeSurrender(MechMania17.Mm17.Command.SurrenderCommand value) {
        if (result.hasSurrender() &&
            result.surrender_ != MechMania17.Mm17.Command.SurrenderCommand.getDefaultInstance()) {
          result.surrender_ =
            MechMania17.Mm17.Command.SurrenderCommand.newBuilder(result.surrender_).mergeFrom(value).buildPartial();
        } else {
          result.surrender_ = value;
        }
        result.hasSurrender = true;
        return this;
      }
      public Builder clearSurrender() {
        result.hasSurrender = false;
        result.surrender_ = MechMania17.Mm17.Command.SurrenderCommand.getDefaultInstance();
        return this;
      }
      
      // optional .MechMania17.Command.AttackCommand attack = 3;
      public boolean hasAttack() {
        return result.hasAttack();
      }
      public MechMania17.Mm17.Command.AttackCommand getAttack() {
        return result.getAttack();
      }
      public Builder setAttack(MechMania17.Mm17.Command.AttackCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAttack = true;
        result.attack_ = value;
        return this;
      }
      public Builder setAttack(MechMania17.Mm17.Command.AttackCommand.Builder builderForValue) {
        result.hasAttack = true;
        result.attack_ = builderForValue.build();
        return this;
      }
      public Builder mergeAttack(MechMania17.Mm17.Command.AttackCommand value) {
        if (result.hasAttack() &&
            result.attack_ != MechMania17.Mm17.Command.AttackCommand.getDefaultInstance()) {
          result.attack_ =
            MechMania17.Mm17.Command.AttackCommand.newBuilder(result.attack_).mergeFrom(value).buildPartial();
        } else {
          result.attack_ = value;
        }
        result.hasAttack = true;
        return this;
      }
      public Builder clearAttack() {
        result.hasAttack = false;
        result.attack_ = MechMania17.Mm17.Command.AttackCommand.getDefaultInstance();
        return this;
      }
      
      // optional .MechMania17.Command.MoveCommand move = 4;
      public boolean hasMove() {
        return result.hasMove();
      }
      public MechMania17.Mm17.Command.MoveCommand getMove() {
        return result.getMove();
      }
      public Builder setMove(MechMania17.Mm17.Command.MoveCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMove = true;
        result.move_ = value;
        return this;
      }
      public Builder setMove(MechMania17.Mm17.Command.MoveCommand.Builder builderForValue) {
        result.hasMove = true;
        result.move_ = builderForValue.build();
        return this;
      }
      public Builder mergeMove(MechMania17.Mm17.Command.MoveCommand value) {
        if (result.hasMove() &&
            result.move_ != MechMania17.Mm17.Command.MoveCommand.getDefaultInstance()) {
          result.move_ =
            MechMania17.Mm17.Command.MoveCommand.newBuilder(result.move_).mergeFrom(value).buildPartial();
        } else {
          result.move_ = value;
        }
        result.hasMove = true;
        return this;
      }
      public Builder clearMove() {
        result.hasMove = false;
        result.move_ = MechMania17.Mm17.Command.MoveCommand.getDefaultInstance();
        return this;
      }
      
      // optional .MechMania17.Command.SummonCommand summon = 5;
      public boolean hasSummon() {
        return result.hasSummon();
      }
      public MechMania17.Mm17.Command.SummonCommand getSummon() {
        return result.getSummon();
      }
      public Builder setSummon(MechMania17.Mm17.Command.SummonCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSummon = true;
        result.summon_ = value;
        return this;
      }
      public Builder setSummon(MechMania17.Mm17.Command.SummonCommand.Builder builderForValue) {
        result.hasSummon = true;
        result.summon_ = builderForValue.build();
        return this;
      }
      public Builder mergeSummon(MechMania17.Mm17.Command.SummonCommand value) {
        if (result.hasSummon() &&
            result.summon_ != MechMania17.Mm17.Command.SummonCommand.getDefaultInstance()) {
          result.summon_ =
            MechMania17.Mm17.Command.SummonCommand.newBuilder(result.summon_).mergeFrom(value).buildPartial();
        } else {
          result.summon_ = value;
        }
        result.hasSummon = true;
        return this;
      }
      public Builder clearSummon() {
        result.hasSummon = false;
        result.summon_ = MechMania17.Mm17.Command.SummonCommand.getDefaultInstance();
        return this;
      }
      
      // optional .MechMania17.Command.LoadSubCommand load_sub = 6;
      public boolean hasLoadSub() {
        return result.hasLoadSub();
      }
      public MechMania17.Mm17.Command.LoadSubCommand getLoadSub() {
        return result.getLoadSub();
      }
      public Builder setLoadSub(MechMania17.Mm17.Command.LoadSubCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLoadSub = true;
        result.loadSub_ = value;
        return this;
      }
      public Builder setLoadSub(MechMania17.Mm17.Command.LoadSubCommand.Builder builderForValue) {
        result.hasLoadSub = true;
        result.loadSub_ = builderForValue.build();
        return this;
      }
      public Builder mergeLoadSub(MechMania17.Mm17.Command.LoadSubCommand value) {
        if (result.hasLoadSub() &&
            result.loadSub_ != MechMania17.Mm17.Command.LoadSubCommand.getDefaultInstance()) {
          result.loadSub_ =
            MechMania17.Mm17.Command.LoadSubCommand.newBuilder(result.loadSub_).mergeFrom(value).buildPartial();
        } else {
          result.loadSub_ = value;
        }
        result.hasLoadSub = true;
        return this;
      }
      public Builder clearLoadSub() {
        result.hasLoadSub = false;
        result.loadSub_ = MechMania17.Mm17.Command.LoadSubCommand.getDefaultInstance();
        return this;
      }
      
      // optional .MechMania17.Command.MoveSubCommand move_sub = 7;
      public boolean hasMoveSub() {
        return result.hasMoveSub();
      }
      public MechMania17.Mm17.Command.MoveSubCommand getMoveSub() {
        return result.getMoveSub();
      }
      public Builder setMoveSub(MechMania17.Mm17.Command.MoveSubCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMoveSub = true;
        result.moveSub_ = value;
        return this;
      }
      public Builder setMoveSub(MechMania17.Mm17.Command.MoveSubCommand.Builder builderForValue) {
        result.hasMoveSub = true;
        result.moveSub_ = builderForValue.build();
        return this;
      }
      public Builder mergeMoveSub(MechMania17.Mm17.Command.MoveSubCommand value) {
        if (result.hasMoveSub() &&
            result.moveSub_ != MechMania17.Mm17.Command.MoveSubCommand.getDefaultInstance()) {
          result.moveSub_ =
            MechMania17.Mm17.Command.MoveSubCommand.newBuilder(result.moveSub_).mergeFrom(value).buildPartial();
        } else {
          result.moveSub_ = value;
        }
        result.hasMoveSub = true;
        return this;
      }
      public Builder clearMoveSub() {
        result.hasMoveSub = false;
        result.moveSub_ = MechMania17.Mm17.Command.MoveSubCommand.getDefaultInstance();
        return this;
      }
      
      // optional .MechMania17.Command.SummonSubCommand summon_sub = 9;
      public boolean hasSummonSub() {
        return result.hasSummonSub();
      }
      public MechMania17.Mm17.Command.SummonSubCommand getSummonSub() {
        return result.getSummonSub();
      }
      public Builder setSummonSub(MechMania17.Mm17.Command.SummonSubCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSummonSub = true;
        result.summonSub_ = value;
        return this;
      }
      public Builder setSummonSub(MechMania17.Mm17.Command.SummonSubCommand.Builder builderForValue) {
        result.hasSummonSub = true;
        result.summonSub_ = builderForValue.build();
        return this;
      }
      public Builder mergeSummonSub(MechMania17.Mm17.Command.SummonSubCommand value) {
        if (result.hasSummonSub() &&
            result.summonSub_ != MechMania17.Mm17.Command.SummonSubCommand.getDefaultInstance()) {
          result.summonSub_ =
            MechMania17.Mm17.Command.SummonSubCommand.newBuilder(result.summonSub_).mergeFrom(value).buildPartial();
        } else {
          result.summonSub_ = value;
        }
        result.hasSummonSub = true;
        return this;
      }
      public Builder clearSummonSub() {
        result.hasSummonSub = false;
        result.summonSub_ = MechMania17.Mm17.Command.SummonSubCommand.getDefaultInstance();
        return this;
      }
      
      // optional .MechMania17.Command.AttachSubCommand attach_sub = 10;
      public boolean hasAttachSub() {
        return result.hasAttachSub();
      }
      public MechMania17.Mm17.Command.AttachSubCommand getAttachSub() {
        return result.getAttachSub();
      }
      public Builder setAttachSub(MechMania17.Mm17.Command.AttachSubCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAttachSub = true;
        result.attachSub_ = value;
        return this;
      }
      public Builder setAttachSub(MechMania17.Mm17.Command.AttachSubCommand.Builder builderForValue) {
        result.hasAttachSub = true;
        result.attachSub_ = builderForValue.build();
        return this;
      }
      public Builder mergeAttachSub(MechMania17.Mm17.Command.AttachSubCommand value) {
        if (result.hasAttachSub() &&
            result.attachSub_ != MechMania17.Mm17.Command.AttachSubCommand.getDefaultInstance()) {
          result.attachSub_ =
            MechMania17.Mm17.Command.AttachSubCommand.newBuilder(result.attachSub_).mergeFrom(value).buildPartial();
        } else {
          result.attachSub_ = value;
        }
        result.hasAttachSub = true;
        return this;
      }
      public Builder clearAttachSub() {
        result.hasAttachSub = false;
        result.attachSub_ = MechMania17.Mm17.Command.AttachSubCommand.getDefaultInstance();
        return this;
      }
      
      // optional bool succeeded = 11;
      public boolean hasSucceeded() {
        return result.hasSucceeded();
      }
      public boolean getSucceeded() {
        return result.getSucceeded();
      }
      public Builder setSucceeded(boolean value) {
        result.hasSucceeded = true;
        result.succeeded_ = value;
        return this;
      }
      public Builder clearSucceeded() {
        result.hasSucceeded = false;
        result.succeeded_ = false;
        return this;
      }
      
      // optional int32 id = 13;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MechMania17.Command)
    }
    
    static {
      defaultInstance = new Command(true);
      MechMania17.Mm17.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MechMania17.Command)
  }
  
  public static final class Actions extends
      com.google.protobuf.GeneratedMessage {
    // Use Actions.newBuilder() to construct.
    private Actions() {
      initFields();
    }
    private Actions(boolean noInit) {}
    
    private static final Actions defaultInstance;
    public static Actions getDefaultInstance() {
      return defaultInstance;
    }
    
    public Actions getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MechMania17.Mm17.internal_static_MechMania17_Actions_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MechMania17.Mm17.internal_static_MechMania17_Actions_fieldAccessorTable;
    }
    
    // repeated .MechMania17.Command actions = 1;
    public static final int ACTIONS_FIELD_NUMBER = 1;
    private java.util.List<MechMania17.Mm17.Command> actions_ =
      java.util.Collections.emptyList();
    public java.util.List<MechMania17.Mm17.Command> getActionsList() {
      return actions_;
    }
    public int getActionsCount() { return actions_.size(); }
    public MechMania17.Mm17.Command getActions(int index) {
      return actions_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (MechMania17.Mm17.Command element : getActionsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (MechMania17.Mm17.Command element : getActionsList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (MechMania17.Mm17.Command element : getActionsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static MechMania17.Mm17.Actions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.Actions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.Actions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.Actions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.Actions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.Actions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.Actions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.Actions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.Actions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.Actions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MechMania17.Mm17.Actions prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private MechMania17.Mm17.Actions result;
      
      // Construct using MechMania17.Mm17.Actions.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new MechMania17.Mm17.Actions();
        return builder;
      }
      
      protected MechMania17.Mm17.Actions internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new MechMania17.Mm17.Actions();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MechMania17.Mm17.Actions.getDescriptor();
      }
      
      public MechMania17.Mm17.Actions getDefaultInstanceForType() {
        return MechMania17.Mm17.Actions.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public MechMania17.Mm17.Actions build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private MechMania17.Mm17.Actions buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public MechMania17.Mm17.Actions buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.actions_ != java.util.Collections.EMPTY_LIST) {
          result.actions_ =
            java.util.Collections.unmodifiableList(result.actions_);
        }
        MechMania17.Mm17.Actions returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MechMania17.Mm17.Actions) {
          return mergeFrom((MechMania17.Mm17.Actions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(MechMania17.Mm17.Actions other) {
        if (other == MechMania17.Mm17.Actions.getDefaultInstance()) return this;
        if (!other.actions_.isEmpty()) {
          if (result.actions_.isEmpty()) {
            result.actions_ = new java.util.ArrayList<MechMania17.Mm17.Command>();
          }
          result.actions_.addAll(other.actions_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              MechMania17.Mm17.Command.Builder subBuilder = MechMania17.Mm17.Command.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addActions(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .MechMania17.Command actions = 1;
      public java.util.List<MechMania17.Mm17.Command> getActionsList() {
        return java.util.Collections.unmodifiableList(result.actions_);
      }
      public int getActionsCount() {
        return result.getActionsCount();
      }
      public MechMania17.Mm17.Command getActions(int index) {
        return result.getActions(index);
      }
      public Builder setActions(int index, MechMania17.Mm17.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.actions_.set(index, value);
        return this;
      }
      public Builder setActions(int index, MechMania17.Mm17.Command.Builder builderForValue) {
        result.actions_.set(index, builderForValue.build());
        return this;
      }
      public Builder addActions(MechMania17.Mm17.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.actions_.isEmpty()) {
          result.actions_ = new java.util.ArrayList<MechMania17.Mm17.Command>();
        }
        result.actions_.add(value);
        return this;
      }
      public Builder addActions(MechMania17.Mm17.Command.Builder builderForValue) {
        if (result.actions_.isEmpty()) {
          result.actions_ = new java.util.ArrayList<MechMania17.Mm17.Command>();
        }
        result.actions_.add(builderForValue.build());
        return this;
      }
      public Builder addAllActions(
          java.lang.Iterable<? extends MechMania17.Mm17.Command> values) {
        if (result.actions_.isEmpty()) {
          result.actions_ = new java.util.ArrayList<MechMania17.Mm17.Command>();
        }
        super.addAll(values, result.actions_);
        return this;
      }
      public Builder clearActions() {
        result.actions_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MechMania17.Actions)
    }
    
    static {
      defaultInstance = new Actions(true);
      MechMania17.Mm17.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MechMania17.Actions)
  }
  
  public static final class GameState extends
      com.google.protobuf.GeneratedMessage {
    // Use GameState.newBuilder() to construct.
    private GameState() {
      initFields();
    }
    private GameState(boolean noInit) {}
    
    private static final GameState defaultInstance;
    public static GameState getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameState getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MechMania17.Mm17.internal_static_MechMania17_GameState_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MechMania17.Mm17.internal_static_MechMania17_GameState_fieldAccessorTable;
    }
    
    public static final class Unit extends
        com.google.protobuf.GeneratedMessage {
      // Use Unit.newBuilder() to construct.
      private Unit() {
        initFields();
      }
      private Unit(boolean noInit) {}
      
      private static final Unit defaultInstance;
      public static Unit getDefaultInstance() {
        return defaultInstance;
      }
      
      public Unit getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MechMania17.Mm17.internal_static_MechMania17_GameState_Unit_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MechMania17.Mm17.internal_static_MechMania17_GameState_Unit_fieldAccessorTable;
      }
      
      // required int32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private boolean hasId;
      private int id_ = 0;
      public boolean hasId() { return hasId; }
      public int getId() { return id_; }
      
      // required int32 hp = 2;
      public static final int HP_FIELD_NUMBER = 2;
      private boolean hasHp;
      private int hp_ = 0;
      public boolean hasHp() { return hasHp; }
      public int getHp() { return hp_; }
      
      // required int32 damage = 3;
      public static final int DAMAGE_FIELD_NUMBER = 3;
      private boolean hasDamage;
      private int damage_ = 0;
      public boolean hasDamage() { return hasDamage; }
      public int getDamage() { return damage_; }
      
      // required int32 range = 4;
      public static final int RANGE_FIELD_NUMBER = 4;
      private boolean hasRange;
      private int range_ = 0;
      public boolean hasRange() { return hasRange; }
      public int getRange() { return range_; }
      
      // required int32 vision = 5;
      public static final int VISION_FIELD_NUMBER = 5;
      private boolean hasVision;
      private int vision_ = 0;
      public boolean hasVision() { return hasVision; }
      public int getVision() { return vision_; }
      
      // required int32 owner = 6;
      public static final int OWNER_FIELD_NUMBER = 6;
      private boolean hasOwner;
      private int owner_ = 0;
      public boolean hasOwner() { return hasOwner; }
      public int getOwner() { return owner_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasId) return false;
        if (!hasHp) return false;
        if (!hasDamage) return false;
        if (!hasRange) return false;
        if (!hasVision) return false;
        if (!hasOwner) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasId()) {
          output.writeInt32(1, getId());
        }
        if (hasHp()) {
          output.writeInt32(2, getHp());
        }
        if (hasDamage()) {
          output.writeInt32(3, getDamage());
        }
        if (hasRange()) {
          output.writeInt32(4, getRange());
        }
        if (hasVision()) {
          output.writeInt32(5, getVision());
        }
        if (hasOwner()) {
          output.writeInt32(6, getOwner());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getId());
        }
        if (hasHp()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getHp());
        }
        if (hasDamage()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, getDamage());
        }
        if (hasRange()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, getRange());
        }
        if (hasVision()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, getVision());
        }
        if (hasOwner()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, getOwner());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static MechMania17.Mm17.GameState.Unit parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.GameState.Unit parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.GameState.Unit parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.GameState.Unit parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.GameState.Unit parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.GameState.Unit parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.GameState.Unit parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.GameState.Unit parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.GameState.Unit parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.GameState.Unit parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MechMania17.Mm17.GameState.Unit prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private MechMania17.Mm17.GameState.Unit result;
        
        // Construct using MechMania17.Mm17.GameState.Unit.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new MechMania17.Mm17.GameState.Unit();
          return builder;
        }
        
        protected MechMania17.Mm17.GameState.Unit internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new MechMania17.Mm17.GameState.Unit();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MechMania17.Mm17.GameState.Unit.getDescriptor();
        }
        
        public MechMania17.Mm17.GameState.Unit getDefaultInstanceForType() {
          return MechMania17.Mm17.GameState.Unit.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public MechMania17.Mm17.GameState.Unit build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private MechMania17.Mm17.GameState.Unit buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public MechMania17.Mm17.GameState.Unit buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          MechMania17.Mm17.GameState.Unit returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MechMania17.Mm17.GameState.Unit) {
            return mergeFrom((MechMania17.Mm17.GameState.Unit)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(MechMania17.Mm17.GameState.Unit other) {
          if (other == MechMania17.Mm17.GameState.Unit.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasHp()) {
            setHp(other.getHp());
          }
          if (other.hasDamage()) {
            setDamage(other.getDamage());
          }
          if (other.hasRange()) {
            setRange(other.getRange());
          }
          if (other.hasVision()) {
            setVision(other.getVision());
          }
          if (other.hasOwner()) {
            setOwner(other.getOwner());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setId(input.readInt32());
                break;
              }
              case 16: {
                setHp(input.readInt32());
                break;
              }
              case 24: {
                setDamage(input.readInt32());
                break;
              }
              case 32: {
                setRange(input.readInt32());
                break;
              }
              case 40: {
                setVision(input.readInt32());
                break;
              }
              case 48: {
                setOwner(input.readInt32());
                break;
              }
            }
          }
        }
        
        
        // required int32 id = 1;
        public boolean hasId() {
          return result.hasId();
        }
        public int getId() {
          return result.getId();
        }
        public Builder setId(int value) {
          result.hasId = true;
          result.id_ = value;
          return this;
        }
        public Builder clearId() {
          result.hasId = false;
          result.id_ = 0;
          return this;
        }
        
        // required int32 hp = 2;
        public boolean hasHp() {
          return result.hasHp();
        }
        public int getHp() {
          return result.getHp();
        }
        public Builder setHp(int value) {
          result.hasHp = true;
          result.hp_ = value;
          return this;
        }
        public Builder clearHp() {
          result.hasHp = false;
          result.hp_ = 0;
          return this;
        }
        
        // required int32 damage = 3;
        public boolean hasDamage() {
          return result.hasDamage();
        }
        public int getDamage() {
          return result.getDamage();
        }
        public Builder setDamage(int value) {
          result.hasDamage = true;
          result.damage_ = value;
          return this;
        }
        public Builder clearDamage() {
          result.hasDamage = false;
          result.damage_ = 0;
          return this;
        }
        
        // required int32 range = 4;
        public boolean hasRange() {
          return result.hasRange();
        }
        public int getRange() {
          return result.getRange();
        }
        public Builder setRange(int value) {
          result.hasRange = true;
          result.range_ = value;
          return this;
        }
        public Builder clearRange() {
          result.hasRange = false;
          result.range_ = 0;
          return this;
        }
        
        // required int32 vision = 5;
        public boolean hasVision() {
          return result.hasVision();
        }
        public int getVision() {
          return result.getVision();
        }
        public Builder setVision(int value) {
          result.hasVision = true;
          result.vision_ = value;
          return this;
        }
        public Builder clearVision() {
          result.hasVision = false;
          result.vision_ = 0;
          return this;
        }
        
        // required int32 owner = 6;
        public boolean hasOwner() {
          return result.hasOwner();
        }
        public int getOwner() {
          return result.getOwner();
        }
        public Builder setOwner(int value) {
          result.hasOwner = true;
          result.owner_ = value;
          return this;
        }
        public Builder clearOwner() {
          result.hasOwner = false;
          result.owner_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MechMania17.GameState.Unit)
      }
      
      static {
        defaultInstance = new Unit(true);
        MechMania17.Mm17.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MechMania17.GameState.Unit)
    }
    
    public static final class Tile extends
        com.google.protobuf.GeneratedMessage {
      // Use Tile.newBuilder() to construct.
      private Tile() {
        initFields();
      }
      private Tile(boolean noInit) {}
      
      private static final Tile defaultInstance;
      public static Tile getDefaultInstance() {
        return defaultInstance;
      }
      
      public Tile getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MechMania17.Mm17.internal_static_MechMania17_GameState_Tile_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MechMania17.Mm17.internal_static_MechMania17_GameState_Tile_fieldAccessorTable;
      }
      
      // required int32 x = 1;
      public static final int X_FIELD_NUMBER = 1;
      private boolean hasX;
      private int x_ = 0;
      public boolean hasX() { return hasX; }
      public int getX() { return x_; }
      
      // required int32 y = 2;
      public static final int Y_FIELD_NUMBER = 2;
      private boolean hasY;
      private int y_ = 0;
      public boolean hasY() { return hasY; }
      public int getY() { return y_; }
      
      // optional int32 owner = 3;
      public static final int OWNER_FIELD_NUMBER = 3;
      private boolean hasOwner;
      private int owner_ = 0;
      public boolean hasOwner() { return hasOwner; }
      public int getOwner() { return owner_; }
      
      // repeated .MechMania17.GameState.Unit units = 4;
      public static final int UNITS_FIELD_NUMBER = 4;
      private java.util.List<MechMania17.Mm17.GameState.Unit> units_ =
        java.util.Collections.emptyList();
      public java.util.List<MechMania17.Mm17.GameState.Unit> getUnitsList() {
        return units_;
      }
      public int getUnitsCount() { return units_.size(); }
      public MechMania17.Mm17.GameState.Unit getUnits(int index) {
        return units_.get(index);
      }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasX) return false;
        if (!hasY) return false;
        for (MechMania17.Mm17.GameState.Unit element : getUnitsList()) {
          if (!element.isInitialized()) return false;
        }
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasX()) {
          output.writeInt32(1, getX());
        }
        if (hasY()) {
          output.writeInt32(2, getY());
        }
        if (hasOwner()) {
          output.writeInt32(3, getOwner());
        }
        for (MechMania17.Mm17.GameState.Unit element : getUnitsList()) {
          output.writeMessage(4, element);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasX()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getX());
        }
        if (hasY()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getY());
        }
        if (hasOwner()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, getOwner());
        }
        for (MechMania17.Mm17.GameState.Unit element : getUnitsList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, element);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static MechMania17.Mm17.GameState.Tile parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.GameState.Tile parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.GameState.Tile parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.GameState.Tile parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.GameState.Tile parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.GameState.Tile parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.GameState.Tile parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.GameState.Tile parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.GameState.Tile parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.GameState.Tile parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MechMania17.Mm17.GameState.Tile prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private MechMania17.Mm17.GameState.Tile result;
        
        // Construct using MechMania17.Mm17.GameState.Tile.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new MechMania17.Mm17.GameState.Tile();
          return builder;
        }
        
        protected MechMania17.Mm17.GameState.Tile internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new MechMania17.Mm17.GameState.Tile();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MechMania17.Mm17.GameState.Tile.getDescriptor();
        }
        
        public MechMania17.Mm17.GameState.Tile getDefaultInstanceForType() {
          return MechMania17.Mm17.GameState.Tile.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public MechMania17.Mm17.GameState.Tile build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private MechMania17.Mm17.GameState.Tile buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public MechMania17.Mm17.GameState.Tile buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.units_ != java.util.Collections.EMPTY_LIST) {
            result.units_ =
              java.util.Collections.unmodifiableList(result.units_);
          }
          MechMania17.Mm17.GameState.Tile returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MechMania17.Mm17.GameState.Tile) {
            return mergeFrom((MechMania17.Mm17.GameState.Tile)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(MechMania17.Mm17.GameState.Tile other) {
          if (other == MechMania17.Mm17.GameState.Tile.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasOwner()) {
            setOwner(other.getOwner());
          }
          if (!other.units_.isEmpty()) {
            if (result.units_.isEmpty()) {
              result.units_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Unit>();
            }
            result.units_.addAll(other.units_);
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setX(input.readInt32());
                break;
              }
              case 16: {
                setY(input.readInt32());
                break;
              }
              case 24: {
                setOwner(input.readInt32());
                break;
              }
              case 34: {
                MechMania17.Mm17.GameState.Unit.Builder subBuilder = MechMania17.Mm17.GameState.Unit.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addUnits(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // required int32 x = 1;
        public boolean hasX() {
          return result.hasX();
        }
        public int getX() {
          return result.getX();
        }
        public Builder setX(int value) {
          result.hasX = true;
          result.x_ = value;
          return this;
        }
        public Builder clearX() {
          result.hasX = false;
          result.x_ = 0;
          return this;
        }
        
        // required int32 y = 2;
        public boolean hasY() {
          return result.hasY();
        }
        public int getY() {
          return result.getY();
        }
        public Builder setY(int value) {
          result.hasY = true;
          result.y_ = value;
          return this;
        }
        public Builder clearY() {
          result.hasY = false;
          result.y_ = 0;
          return this;
        }
        
        // optional int32 owner = 3;
        public boolean hasOwner() {
          return result.hasOwner();
        }
        public int getOwner() {
          return result.getOwner();
        }
        public Builder setOwner(int value) {
          result.hasOwner = true;
          result.owner_ = value;
          return this;
        }
        public Builder clearOwner() {
          result.hasOwner = false;
          result.owner_ = 0;
          return this;
        }
        
        // repeated .MechMania17.GameState.Unit units = 4;
        public java.util.List<MechMania17.Mm17.GameState.Unit> getUnitsList() {
          return java.util.Collections.unmodifiableList(result.units_);
        }
        public int getUnitsCount() {
          return result.getUnitsCount();
        }
        public MechMania17.Mm17.GameState.Unit getUnits(int index) {
          return result.getUnits(index);
        }
        public Builder setUnits(int index, MechMania17.Mm17.GameState.Unit value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.units_.set(index, value);
          return this;
        }
        public Builder setUnits(int index, MechMania17.Mm17.GameState.Unit.Builder builderForValue) {
          result.units_.set(index, builderForValue.build());
          return this;
        }
        public Builder addUnits(MechMania17.Mm17.GameState.Unit value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.units_.isEmpty()) {
            result.units_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Unit>();
          }
          result.units_.add(value);
          return this;
        }
        public Builder addUnits(MechMania17.Mm17.GameState.Unit.Builder builderForValue) {
          if (result.units_.isEmpty()) {
            result.units_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Unit>();
          }
          result.units_.add(builderForValue.build());
          return this;
        }
        public Builder addAllUnits(
            java.lang.Iterable<? extends MechMania17.Mm17.GameState.Unit> values) {
          if (result.units_.isEmpty()) {
            result.units_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Unit>();
          }
          super.addAll(values, result.units_);
          return this;
        }
        public Builder clearUnits() {
          result.units_ = java.util.Collections.emptyList();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MechMania17.GameState.Tile)
      }
      
      static {
        defaultInstance = new Tile(true);
        MechMania17.Mm17.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MechMania17.GameState.Tile)
    }
    
    public static final class Submarine extends
        com.google.protobuf.GeneratedMessage {
      // Use Submarine.newBuilder() to construct.
      private Submarine() {
        initFields();
      }
      private Submarine(boolean noInit) {}
      
      private static final Submarine defaultInstance;
      public static Submarine getDefaultInstance() {
        return defaultInstance;
      }
      
      public Submarine getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MechMania17.Mm17.internal_static_MechMania17_GameState_Submarine_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MechMania17.Mm17.internal_static_MechMania17_GameState_Submarine_fieldAccessorTable;
      }
      
      // required int32 x = 1;
      public static final int X_FIELD_NUMBER = 1;
      private boolean hasX;
      private int x_ = 0;
      public boolean hasX() { return hasX; }
      public int getX() { return x_; }
      
      // required int32 y = 2;
      public static final int Y_FIELD_NUMBER = 2;
      private boolean hasY;
      private int y_ = 0;
      public boolean hasY() { return hasY; }
      public int getY() { return y_; }
      
      // required int32 id = 3;
      public static final int ID_FIELD_NUMBER = 3;
      private boolean hasId;
      private int id_ = 0;
      public boolean hasId() { return hasId; }
      public int getId() { return id_; }
      
      // required bool submerged = 4;
      public static final int SUBMERGED_FIELD_NUMBER = 4;
      private boolean hasSubmerged;
      private boolean submerged_ = false;
      public boolean hasSubmerged() { return hasSubmerged; }
      public boolean getSubmerged() { return submerged_; }
      
      // repeated .MechMania17.GameState.Unit units = 5;
      public static final int UNITS_FIELD_NUMBER = 5;
      private java.util.List<MechMania17.Mm17.GameState.Unit> units_ =
        java.util.Collections.emptyList();
      public java.util.List<MechMania17.Mm17.GameState.Unit> getUnitsList() {
        return units_;
      }
      public int getUnitsCount() { return units_.size(); }
      public MechMania17.Mm17.GameState.Unit getUnits(int index) {
        return units_.get(index);
      }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasX) return false;
        if (!hasY) return false;
        if (!hasId) return false;
        if (!hasSubmerged) return false;
        for (MechMania17.Mm17.GameState.Unit element : getUnitsList()) {
          if (!element.isInitialized()) return false;
        }
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasX()) {
          output.writeInt32(1, getX());
        }
        if (hasY()) {
          output.writeInt32(2, getY());
        }
        if (hasId()) {
          output.writeInt32(3, getId());
        }
        if (hasSubmerged()) {
          output.writeBool(4, getSubmerged());
        }
        for (MechMania17.Mm17.GameState.Unit element : getUnitsList()) {
          output.writeMessage(5, element);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasX()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getX());
        }
        if (hasY()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getY());
        }
        if (hasId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, getId());
        }
        if (hasSubmerged()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, getSubmerged());
        }
        for (MechMania17.Mm17.GameState.Unit element : getUnitsList()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, element);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static MechMania17.Mm17.GameState.Submarine parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.GameState.Submarine parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.GameState.Submarine parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static MechMania17.Mm17.GameState.Submarine parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.GameState.Submarine parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.GameState.Submarine parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static MechMania17.Mm17.GameState.Submarine parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.GameState.Submarine parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static MechMania17.Mm17.GameState.Submarine parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static MechMania17.Mm17.GameState.Submarine parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(MechMania17.Mm17.GameState.Submarine prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private MechMania17.Mm17.GameState.Submarine result;
        
        // Construct using MechMania17.Mm17.GameState.Submarine.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new MechMania17.Mm17.GameState.Submarine();
          return builder;
        }
        
        protected MechMania17.Mm17.GameState.Submarine internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new MechMania17.Mm17.GameState.Submarine();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MechMania17.Mm17.GameState.Submarine.getDescriptor();
        }
        
        public MechMania17.Mm17.GameState.Submarine getDefaultInstanceForType() {
          return MechMania17.Mm17.GameState.Submarine.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public MechMania17.Mm17.GameState.Submarine build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private MechMania17.Mm17.GameState.Submarine buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public MechMania17.Mm17.GameState.Submarine buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.units_ != java.util.Collections.EMPTY_LIST) {
            result.units_ =
              java.util.Collections.unmodifiableList(result.units_);
          }
          MechMania17.Mm17.GameState.Submarine returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MechMania17.Mm17.GameState.Submarine) {
            return mergeFrom((MechMania17.Mm17.GameState.Submarine)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(MechMania17.Mm17.GameState.Submarine other) {
          if (other == MechMania17.Mm17.GameState.Submarine.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasSubmerged()) {
            setSubmerged(other.getSubmerged());
          }
          if (!other.units_.isEmpty()) {
            if (result.units_.isEmpty()) {
              result.units_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Unit>();
            }
            result.units_.addAll(other.units_);
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setX(input.readInt32());
                break;
              }
              case 16: {
                setY(input.readInt32());
                break;
              }
              case 24: {
                setId(input.readInt32());
                break;
              }
              case 32: {
                setSubmerged(input.readBool());
                break;
              }
              case 42: {
                MechMania17.Mm17.GameState.Unit.Builder subBuilder = MechMania17.Mm17.GameState.Unit.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addUnits(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // required int32 x = 1;
        public boolean hasX() {
          return result.hasX();
        }
        public int getX() {
          return result.getX();
        }
        public Builder setX(int value) {
          result.hasX = true;
          result.x_ = value;
          return this;
        }
        public Builder clearX() {
          result.hasX = false;
          result.x_ = 0;
          return this;
        }
        
        // required int32 y = 2;
        public boolean hasY() {
          return result.hasY();
        }
        public int getY() {
          return result.getY();
        }
        public Builder setY(int value) {
          result.hasY = true;
          result.y_ = value;
          return this;
        }
        public Builder clearY() {
          result.hasY = false;
          result.y_ = 0;
          return this;
        }
        
        // required int32 id = 3;
        public boolean hasId() {
          return result.hasId();
        }
        public int getId() {
          return result.getId();
        }
        public Builder setId(int value) {
          result.hasId = true;
          result.id_ = value;
          return this;
        }
        public Builder clearId() {
          result.hasId = false;
          result.id_ = 0;
          return this;
        }
        
        // required bool submerged = 4;
        public boolean hasSubmerged() {
          return result.hasSubmerged();
        }
        public boolean getSubmerged() {
          return result.getSubmerged();
        }
        public Builder setSubmerged(boolean value) {
          result.hasSubmerged = true;
          result.submerged_ = value;
          return this;
        }
        public Builder clearSubmerged() {
          result.hasSubmerged = false;
          result.submerged_ = false;
          return this;
        }
        
        // repeated .MechMania17.GameState.Unit units = 5;
        public java.util.List<MechMania17.Mm17.GameState.Unit> getUnitsList() {
          return java.util.Collections.unmodifiableList(result.units_);
        }
        public int getUnitsCount() {
          return result.getUnitsCount();
        }
        public MechMania17.Mm17.GameState.Unit getUnits(int index) {
          return result.getUnits(index);
        }
        public Builder setUnits(int index, MechMania17.Mm17.GameState.Unit value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.units_.set(index, value);
          return this;
        }
        public Builder setUnits(int index, MechMania17.Mm17.GameState.Unit.Builder builderForValue) {
          result.units_.set(index, builderForValue.build());
          return this;
        }
        public Builder addUnits(MechMania17.Mm17.GameState.Unit value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.units_.isEmpty()) {
            result.units_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Unit>();
          }
          result.units_.add(value);
          return this;
        }
        public Builder addUnits(MechMania17.Mm17.GameState.Unit.Builder builderForValue) {
          if (result.units_.isEmpty()) {
            result.units_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Unit>();
          }
          result.units_.add(builderForValue.build());
          return this;
        }
        public Builder addAllUnits(
            java.lang.Iterable<? extends MechMania17.Mm17.GameState.Unit> values) {
          if (result.units_.isEmpty()) {
            result.units_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Unit>();
          }
          super.addAll(values, result.units_);
          return this;
        }
        public Builder clearUnits() {
          result.units_ = java.util.Collections.emptyList();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MechMania17.GameState.Submarine)
      }
      
      static {
        defaultInstance = new Submarine(true);
        MechMania17.Mm17.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MechMania17.GameState.Submarine)
    }
    
    // required int32 gold = 1;
    public static final int GOLD_FIELD_NUMBER = 1;
    private boolean hasGold;
    private int gold_ = 0;
    public boolean hasGold() { return hasGold; }
    public int getGold() { return gold_; }
    
    // repeated .MechMania17.GameState.Tile tiles = 2;
    public static final int TILES_FIELD_NUMBER = 2;
    private java.util.List<MechMania17.Mm17.GameState.Tile> tiles_ =
      java.util.Collections.emptyList();
    public java.util.List<MechMania17.Mm17.GameState.Tile> getTilesList() {
      return tiles_;
    }
    public int getTilesCount() { return tiles_.size(); }
    public MechMania17.Mm17.GameState.Tile getTiles(int index) {
      return tiles_.get(index);
    }
    
    // repeated .MechMania17.GameState.Submarine submarines = 3;
    public static final int SUBMARINES_FIELD_NUMBER = 3;
    private java.util.List<MechMania17.Mm17.GameState.Submarine> submarines_ =
      java.util.Collections.emptyList();
    public java.util.List<MechMania17.Mm17.GameState.Submarine> getSubmarinesList() {
      return submarines_;
    }
    public int getSubmarinesCount() { return submarines_.size(); }
    public MechMania17.Mm17.GameState.Submarine getSubmarines(int index) {
      return submarines_.get(index);
    }
    
    // required int32 id = 4;
    public static final int ID_FIELD_NUMBER = 4;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasGold) return false;
      if (!hasId) return false;
      for (MechMania17.Mm17.GameState.Tile element : getTilesList()) {
        if (!element.isInitialized()) return false;
      }
      for (MechMania17.Mm17.GameState.Submarine element : getSubmarinesList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGold()) {
        output.writeInt32(1, getGold());
      }
      for (MechMania17.Mm17.GameState.Tile element : getTilesList()) {
        output.writeMessage(2, element);
      }
      for (MechMania17.Mm17.GameState.Submarine element : getSubmarinesList()) {
        output.writeMessage(3, element);
      }
      if (hasId()) {
        output.writeInt32(4, getId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGold()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getGold());
      }
      for (MechMania17.Mm17.GameState.Tile element : getTilesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      for (MechMania17.Mm17.GameState.Submarine element : getSubmarinesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static MechMania17.Mm17.GameState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.GameState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.GameState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.GameState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.GameState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.GameState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.GameState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.GameState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.GameState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.GameState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MechMania17.Mm17.GameState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private MechMania17.Mm17.GameState result;
      
      // Construct using MechMania17.Mm17.GameState.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new MechMania17.Mm17.GameState();
        return builder;
      }
      
      protected MechMania17.Mm17.GameState internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new MechMania17.Mm17.GameState();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MechMania17.Mm17.GameState.getDescriptor();
      }
      
      public MechMania17.Mm17.GameState getDefaultInstanceForType() {
        return MechMania17.Mm17.GameState.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public MechMania17.Mm17.GameState build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private MechMania17.Mm17.GameState buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public MechMania17.Mm17.GameState buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.tiles_ != java.util.Collections.EMPTY_LIST) {
          result.tiles_ =
            java.util.Collections.unmodifiableList(result.tiles_);
        }
        if (result.submarines_ != java.util.Collections.EMPTY_LIST) {
          result.submarines_ =
            java.util.Collections.unmodifiableList(result.submarines_);
        }
        MechMania17.Mm17.GameState returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MechMania17.Mm17.GameState) {
          return mergeFrom((MechMania17.Mm17.GameState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(MechMania17.Mm17.GameState other) {
        if (other == MechMania17.Mm17.GameState.getDefaultInstance()) return this;
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (!other.tiles_.isEmpty()) {
          if (result.tiles_.isEmpty()) {
            result.tiles_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Tile>();
          }
          result.tiles_.addAll(other.tiles_);
        }
        if (!other.submarines_.isEmpty()) {
          if (result.submarines_.isEmpty()) {
            result.submarines_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Submarine>();
          }
          result.submarines_.addAll(other.submarines_);
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setGold(input.readInt32());
              break;
            }
            case 18: {
              MechMania17.Mm17.GameState.Tile.Builder subBuilder = MechMania17.Mm17.GameState.Tile.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTiles(subBuilder.buildPartial());
              break;
            }
            case 26: {
              MechMania17.Mm17.GameState.Submarine.Builder subBuilder = MechMania17.Mm17.GameState.Submarine.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSubmarines(subBuilder.buildPartial());
              break;
            }
            case 32: {
              setId(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 gold = 1;
      public boolean hasGold() {
        return result.hasGold();
      }
      public int getGold() {
        return result.getGold();
      }
      public Builder setGold(int value) {
        result.hasGold = true;
        result.gold_ = value;
        return this;
      }
      public Builder clearGold() {
        result.hasGold = false;
        result.gold_ = 0;
        return this;
      }
      
      // repeated .MechMania17.GameState.Tile tiles = 2;
      public java.util.List<MechMania17.Mm17.GameState.Tile> getTilesList() {
        return java.util.Collections.unmodifiableList(result.tiles_);
      }
      public int getTilesCount() {
        return result.getTilesCount();
      }
      public MechMania17.Mm17.GameState.Tile getTiles(int index) {
        return result.getTiles(index);
      }
      public Builder setTiles(int index, MechMania17.Mm17.GameState.Tile value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.tiles_.set(index, value);
        return this;
      }
      public Builder setTiles(int index, MechMania17.Mm17.GameState.Tile.Builder builderForValue) {
        result.tiles_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTiles(MechMania17.Mm17.GameState.Tile value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.tiles_.isEmpty()) {
          result.tiles_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Tile>();
        }
        result.tiles_.add(value);
        return this;
      }
      public Builder addTiles(MechMania17.Mm17.GameState.Tile.Builder builderForValue) {
        if (result.tiles_.isEmpty()) {
          result.tiles_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Tile>();
        }
        result.tiles_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTiles(
          java.lang.Iterable<? extends MechMania17.Mm17.GameState.Tile> values) {
        if (result.tiles_.isEmpty()) {
          result.tiles_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Tile>();
        }
        super.addAll(values, result.tiles_);
        return this;
      }
      public Builder clearTiles() {
        result.tiles_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .MechMania17.GameState.Submarine submarines = 3;
      public java.util.List<MechMania17.Mm17.GameState.Submarine> getSubmarinesList() {
        return java.util.Collections.unmodifiableList(result.submarines_);
      }
      public int getSubmarinesCount() {
        return result.getSubmarinesCount();
      }
      public MechMania17.Mm17.GameState.Submarine getSubmarines(int index) {
        return result.getSubmarines(index);
      }
      public Builder setSubmarines(int index, MechMania17.Mm17.GameState.Submarine value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.submarines_.set(index, value);
        return this;
      }
      public Builder setSubmarines(int index, MechMania17.Mm17.GameState.Submarine.Builder builderForValue) {
        result.submarines_.set(index, builderForValue.build());
        return this;
      }
      public Builder addSubmarines(MechMania17.Mm17.GameState.Submarine value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.submarines_.isEmpty()) {
          result.submarines_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Submarine>();
        }
        result.submarines_.add(value);
        return this;
      }
      public Builder addSubmarines(MechMania17.Mm17.GameState.Submarine.Builder builderForValue) {
        if (result.submarines_.isEmpty()) {
          result.submarines_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Submarine>();
        }
        result.submarines_.add(builderForValue.build());
        return this;
      }
      public Builder addAllSubmarines(
          java.lang.Iterable<? extends MechMania17.Mm17.GameState.Submarine> values) {
        if (result.submarines_.isEmpty()) {
          result.submarines_ = new java.util.ArrayList<MechMania17.Mm17.GameState.Submarine>();
        }
        super.addAll(values, result.submarines_);
        return this;
      }
      public Builder clearSubmarines() {
        result.submarines_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required int32 id = 4;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MechMania17.GameState)
    }
    
    static {
      defaultInstance = new GameState(true);
      MechMania17.Mm17.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MechMania17.GameState)
  }
  
  public static final class Turn extends
      com.google.protobuf.GeneratedMessage {
    // Use Turn.newBuilder() to construct.
    private Turn() {
      initFields();
    }
    private Turn(boolean noInit) {}
    
    private static final Turn defaultInstance;
    public static Turn getDefaultInstance() {
      return defaultInstance;
    }
    
    public Turn getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MechMania17.Mm17.internal_static_MechMania17_Turn_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MechMania17.Mm17.internal_static_MechMania17_Turn_fieldAccessorTable;
    }
    
    // required int32 turn_count = 1;
    public static final int TURN_COUNT_FIELD_NUMBER = 1;
    private boolean hasTurnCount;
    private int turnCount_ = 0;
    public boolean hasTurnCount() { return hasTurnCount; }
    public int getTurnCount() { return turnCount_; }
    
    // optional .MechMania17.GameState game_state = 2;
    public static final int GAME_STATE_FIELD_NUMBER = 2;
    private boolean hasGameState;
    private MechMania17.Mm17.GameState gameState_;
    public boolean hasGameState() { return hasGameState; }
    public MechMania17.Mm17.GameState getGameState() { return gameState_; }
    
    // optional .MechMania17.Command command = 3;
    public static final int COMMAND_FIELD_NUMBER = 3;
    private boolean hasCommand;
    private MechMania17.Mm17.Command command_;
    public boolean hasCommand() { return hasCommand; }
    public MechMania17.Mm17.Command getCommand() { return command_; }
    
    private void initFields() {
      gameState_ = MechMania17.Mm17.GameState.getDefaultInstance();
      command_ = MechMania17.Mm17.Command.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasTurnCount) return false;
      if (hasGameState()) {
        if (!getGameState().isInitialized()) return false;
      }
      if (hasCommand()) {
        if (!getCommand().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTurnCount()) {
        output.writeInt32(1, getTurnCount());
      }
      if (hasGameState()) {
        output.writeMessage(2, getGameState());
      }
      if (hasCommand()) {
        output.writeMessage(3, getCommand());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTurnCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getTurnCount());
      }
      if (hasGameState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGameState());
      }
      if (hasCommand()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCommand());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static MechMania17.Mm17.Turn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.Turn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.Turn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static MechMania17.Mm17.Turn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.Turn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.Turn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static MechMania17.Mm17.Turn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.Turn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static MechMania17.Mm17.Turn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static MechMania17.Mm17.Turn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(MechMania17.Mm17.Turn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private MechMania17.Mm17.Turn result;
      
      // Construct using MechMania17.Mm17.Turn.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new MechMania17.Mm17.Turn();
        return builder;
      }
      
      protected MechMania17.Mm17.Turn internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new MechMania17.Mm17.Turn();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MechMania17.Mm17.Turn.getDescriptor();
      }
      
      public MechMania17.Mm17.Turn getDefaultInstanceForType() {
        return MechMania17.Mm17.Turn.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public MechMania17.Mm17.Turn build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private MechMania17.Mm17.Turn buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public MechMania17.Mm17.Turn buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        MechMania17.Mm17.Turn returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MechMania17.Mm17.Turn) {
          return mergeFrom((MechMania17.Mm17.Turn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(MechMania17.Mm17.Turn other) {
        if (other == MechMania17.Mm17.Turn.getDefaultInstance()) return this;
        if (other.hasTurnCount()) {
          setTurnCount(other.getTurnCount());
        }
        if (other.hasGameState()) {
          mergeGameState(other.getGameState());
        }
        if (other.hasCommand()) {
          mergeCommand(other.getCommand());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTurnCount(input.readInt32());
              break;
            }
            case 18: {
              MechMania17.Mm17.GameState.Builder subBuilder = MechMania17.Mm17.GameState.newBuilder();
              if (hasGameState()) {
                subBuilder.mergeFrom(getGameState());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameState(subBuilder.buildPartial());
              break;
            }
            case 26: {
              MechMania17.Mm17.Command.Builder subBuilder = MechMania17.Mm17.Command.newBuilder();
              if (hasCommand()) {
                subBuilder.mergeFrom(getCommand());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCommand(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required int32 turn_count = 1;
      public boolean hasTurnCount() {
        return result.hasTurnCount();
      }
      public int getTurnCount() {
        return result.getTurnCount();
      }
      public Builder setTurnCount(int value) {
        result.hasTurnCount = true;
        result.turnCount_ = value;
        return this;
      }
      public Builder clearTurnCount() {
        result.hasTurnCount = false;
        result.turnCount_ = 0;
        return this;
      }
      
      // optional .MechMania17.GameState game_state = 2;
      public boolean hasGameState() {
        return result.hasGameState();
      }
      public MechMania17.Mm17.GameState getGameState() {
        return result.getGameState();
      }
      public Builder setGameState(MechMania17.Mm17.GameState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameState = true;
        result.gameState_ = value;
        return this;
      }
      public Builder setGameState(MechMania17.Mm17.GameState.Builder builderForValue) {
        result.hasGameState = true;
        result.gameState_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameState(MechMania17.Mm17.GameState value) {
        if (result.hasGameState() &&
            result.gameState_ != MechMania17.Mm17.GameState.getDefaultInstance()) {
          result.gameState_ =
            MechMania17.Mm17.GameState.newBuilder(result.gameState_).mergeFrom(value).buildPartial();
        } else {
          result.gameState_ = value;
        }
        result.hasGameState = true;
        return this;
      }
      public Builder clearGameState() {
        result.hasGameState = false;
        result.gameState_ = MechMania17.Mm17.GameState.getDefaultInstance();
        return this;
      }
      
      // optional .MechMania17.Command command = 3;
      public boolean hasCommand() {
        return result.hasCommand();
      }
      public MechMania17.Mm17.Command getCommand() {
        return result.getCommand();
      }
      public Builder setCommand(MechMania17.Mm17.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCommand = true;
        result.command_ = value;
        return this;
      }
      public Builder setCommand(MechMania17.Mm17.Command.Builder builderForValue) {
        result.hasCommand = true;
        result.command_ = builderForValue.build();
        return this;
      }
      public Builder mergeCommand(MechMania17.Mm17.Command value) {
        if (result.hasCommand() &&
            result.command_ != MechMania17.Mm17.Command.getDefaultInstance()) {
          result.command_ =
            MechMania17.Mm17.Command.newBuilder(result.command_).mergeFrom(value).buildPartial();
        } else {
          result.command_ = value;
        }
        result.hasCommand = true;
        return this;
      }
      public Builder clearCommand() {
        result.hasCommand = false;
        result.command_ = MechMania17.Mm17.Command.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MechMania17.Turn)
    }
    
    static {
      defaultInstance = new Turn(true);
      MechMania17.Mm17.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MechMania17.Turn)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_ClientConnect_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_ClientConnect_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_PlayerList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_PlayerList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_DeadPlayers_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_DeadPlayers_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_DeadPlayers_DeadPlayer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_DeadPlayers_DeadPlayer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_FinalScores_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_FinalScores_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_FinalScores_Score_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_FinalScores_Score_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_InitialResources_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_InitialResources_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_InitialResources_Tile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_InitialResources_Tile_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_Command_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_Command_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_Command_SurrenderCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_Command_SurrenderCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_Command_AttackCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_Command_AttackCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_Command_MoveCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_Command_MoveCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_Command_SummonCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_Command_SummonCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_Command_LoadSubCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_Command_LoadSubCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_Command_MoveSubCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_Command_MoveSubCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_Command_SummonSubCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_Command_SummonSubCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_Command_AttachSubCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_Command_AttachSubCommand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_Actions_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_Actions_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_GameState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_GameState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_GameState_Unit_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_GameState_Unit_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_GameState_Tile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_GameState_Tile_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_GameState_Submarine_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_GameState_Submarine_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MechMania17_Turn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MechMania17_Turn_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nmm17.proto\022\013MechMania17\")\n\rClientConne" +
      "ct\022\014\n\004name\030\001 \002(\t\022\n\n\002id\030\002 \001(\005\"9\n\nPlayerLi" +
      "st\022+\n\007players\030\001 \003(\0132\032.MechMania17.Client" +
      "Connect\"o\n\013DeadPlayers\0224\n\007players\030\001 \003(\0132" +
      "#.MechMania17.DeadPlayers.DeadPlayer\032*\n\n" +
      "DeadPlayer\022\014\n\004name\030\001 \002(\t\022\016\n\006reason\030\002 \002(\t" +
      "\"c\n\013FinalScores\022.\n\006scores\030\001 \003(\0132\036.MechMa" +
      "nia17.FinalScores.Score\032$\n\005Score\022\014\n\004name" +
      "\030\001 \002(\t\022\r\n\005score\030\002 \002(\005\"\363\001\n\020InitialResourc" +
      "es\022\n\n\002id\030\001 \002(\005\022\021\n\tmap_width\030\002 \002(\005\0221\n\005til",
      "es\030\003 \003(\0132\".MechMania17.InitialResources." +
      "Tile\032\214\001\n\004Tile\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\022?\n\004t" +
      "ype\030\003 \001(\0162*.MechMania17.InitialResources" +
      ".Tile.Terrain:\005PLAIN\"-\n\007Terrain\022\t\n\005PLAIN" +
      "\020\000\022\t\n\005OCEAN\020\001\022\014\n\010MOUNTAIN\020\002\"\361\007\n\007Command\022" +
      "&\n\004type\030\001 \002(\0162\030.MechMania17.CommandType\022" +
      "8\n\tsurrender\030\002 \001(\0132%.MechMania17.Command" +
      ".SurrenderCommand\0222\n\006attack\030\003 \001(\0132\".Mech" +
      "Mania17.Command.AttackCommand\022.\n\004move\030\004 " +
      "\001(\0132 .MechMania17.Command.MoveCommand\0222\n",
      "\006summon\030\005 \001(\0132\".MechMania17.Command.Summ" +
      "onCommand\0225\n\010load_sub\030\006 \001(\0132#.MechMania1" +
      "7.Command.LoadSubCommand\0225\n\010move_sub\030\007 \001" +
      "(\0132#.MechMania17.Command.MoveSubCommand\022" +
      "9\n\nsummon_sub\030\t \001(\0132%.MechMania17.Comman" +
      "d.SummonSubCommand\0229\n\nattach_sub\030\n \001(\0132%" +
      ".MechMania17.Command.AttachSubCommand\022\021\n" +
      "\tsucceeded\030\013 \001(\010\022\n\n\002id\030\r \001(\005\032\022\n\020Surrende" +
      "rCommand\032/\n\rAttackCommand\022\016\n\006source\030\001 \002(" +
      "\005\022\016\n\006target\030\002 \002(\005\032L\n\013MoveCommand\022\n\n\002id\030\001",
      " \002(\005\0221\n\tdirection\030\002 \002(\0162\036.MechMania17.Co" +
      "mmand.Direction\032`\n\rSummonCommand\022\n\n\002hp\030\001" +
      " \002(\005\022\016\n\006damage\030\002 \002(\005\022\r\n\005range\030\003 \002(\005\022\016\n\006v" +
      "ision\030\004 \002(\005\022\t\n\001x\030\005 \002(\005\022\t\n\001y\030\006 \002(\005\0321\n\016Loa" +
      "dSubCommand\022\021\n\tsubmarine\030\001 \002(\005\022\014\n\004unit\030\002" +
      " \002(\005\0329\n\016MoveSubCommand\022\021\n\tsubmarine\030\001 \002(" +
      "\005\022\t\n\001x\030\002 \002(\005\022\t\n\001y\030\003 \002(\005\032(\n\020SummonSubComm" +
      "and\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\032%\n\020AttachSubCo" +
      "mmand\022\021\n\tsubmarine\030\001 \002(\005\"5\n\tDirection\022\t\n" +
      "\005NORTH\020\000\022\010\n\004EAST\020\001\022\010\n\004WEST\020\002\022\t\n\005SOUTH\020\003\"",
      "0\n\007Actions\022%\n\007actions\030\001 \003(\0132\024.MechMania1" +
      "7.Command\"\254\003\n\tGameState\022\014\n\004gold\030\001 \002(\005\022*\n" +
      "\005tiles\030\002 \003(\0132\033.MechMania17.GameState.Til" +
      "e\0224\n\nsubmarines\030\003 \003(\0132 .MechMania17.Game" +
      "State.Submarine\022\n\n\002id\030\004 \002(\005\032\\\n\004Unit\022\n\n\002i" +
      "d\030\001 \002(\005\022\n\n\002hp\030\002 \002(\005\022\016\n\006damage\030\003 \002(\005\022\r\n\005r" +
      "ange\030\004 \002(\005\022\016\n\006vision\030\005 \002(\005\022\r\n\005owner\030\006 \002(" +
      "\005\032W\n\004Tile\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\022\r\n\005owner" +
      "\030\003 \001(\005\022*\n\005units\030\004 \003(\0132\033.MechMania17.Game" +
      "State.Unit\032l\n\tSubmarine\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030",
      "\002 \002(\005\022\n\n\002id\030\003 \002(\005\022\021\n\tsubmerged\030\004 \002(\010\022*\n\005" +
      "units\030\005 \003(\0132\033.MechMania17.GameState.Unit" +
      "\"m\n\004Turn\022\022\n\nturn_count\030\001 \002(\005\022*\n\ngame_sta" +
      "te\030\002 \001(\0132\026.MechMania17.GameState\022%\n\007comm" +
      "and\030\003 \001(\0132\024.MechMania17.Command*v\n\013Comma" +
      "ndType\022\r\n\tSURRENDER\020\000\022\n\n\006ATTACK\020\001\022\010\n\004MOV" +
      "E\020\002\022\n\n\006SUMMON\020\003\022\013\n\007LOADSUB\020\004\022\013\n\007MOVESUB\020" +
      "\005\022\r\n\tSUMMONSUB\020\007\022\r\n\tATTACHSUB\020\010B\002H\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_MechMania17_ClientConnect_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_MechMania17_ClientConnect_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_ClientConnect_descriptor,
              new java.lang.String[] { "Name", "Id", },
              MechMania17.Mm17.ClientConnect.class,
              MechMania17.Mm17.ClientConnect.Builder.class);
          internal_static_MechMania17_PlayerList_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_MechMania17_PlayerList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_PlayerList_descriptor,
              new java.lang.String[] { "Players", },
              MechMania17.Mm17.PlayerList.class,
              MechMania17.Mm17.PlayerList.Builder.class);
          internal_static_MechMania17_DeadPlayers_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_MechMania17_DeadPlayers_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_DeadPlayers_descriptor,
              new java.lang.String[] { "Players", },
              MechMania17.Mm17.DeadPlayers.class,
              MechMania17.Mm17.DeadPlayers.Builder.class);
          internal_static_MechMania17_DeadPlayers_DeadPlayer_descriptor =
            internal_static_MechMania17_DeadPlayers_descriptor.getNestedTypes().get(0);
          internal_static_MechMania17_DeadPlayers_DeadPlayer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_DeadPlayers_DeadPlayer_descriptor,
              new java.lang.String[] { "Name", "Reason", },
              MechMania17.Mm17.DeadPlayers.DeadPlayer.class,
              MechMania17.Mm17.DeadPlayers.DeadPlayer.Builder.class);
          internal_static_MechMania17_FinalScores_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_MechMania17_FinalScores_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_FinalScores_descriptor,
              new java.lang.String[] { "Scores", },
              MechMania17.Mm17.FinalScores.class,
              MechMania17.Mm17.FinalScores.Builder.class);
          internal_static_MechMania17_FinalScores_Score_descriptor =
            internal_static_MechMania17_FinalScores_descriptor.getNestedTypes().get(0);
          internal_static_MechMania17_FinalScores_Score_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_FinalScores_Score_descriptor,
              new java.lang.String[] { "Name", "Score", },
              MechMania17.Mm17.FinalScores.Score.class,
              MechMania17.Mm17.FinalScores.Score.Builder.class);
          internal_static_MechMania17_InitialResources_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_MechMania17_InitialResources_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_InitialResources_descriptor,
              new java.lang.String[] { "Id", "MapWidth", "Tiles", },
              MechMania17.Mm17.InitialResources.class,
              MechMania17.Mm17.InitialResources.Builder.class);
          internal_static_MechMania17_InitialResources_Tile_descriptor =
            internal_static_MechMania17_InitialResources_descriptor.getNestedTypes().get(0);
          internal_static_MechMania17_InitialResources_Tile_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_InitialResources_Tile_descriptor,
              new java.lang.String[] { "X", "Y", "Type", },
              MechMania17.Mm17.InitialResources.Tile.class,
              MechMania17.Mm17.InitialResources.Tile.Builder.class);
          internal_static_MechMania17_Command_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_MechMania17_Command_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_Command_descriptor,
              new java.lang.String[] { "Type", "Surrender", "Attack", "Move", "Summon", "LoadSub", "MoveSub", "SummonSub", "AttachSub", "Succeeded", "Id", },
              MechMania17.Mm17.Command.class,
              MechMania17.Mm17.Command.Builder.class);
          internal_static_MechMania17_Command_SurrenderCommand_descriptor =
            internal_static_MechMania17_Command_descriptor.getNestedTypes().get(0);
          internal_static_MechMania17_Command_SurrenderCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_Command_SurrenderCommand_descriptor,
              new java.lang.String[] { },
              MechMania17.Mm17.Command.SurrenderCommand.class,
              MechMania17.Mm17.Command.SurrenderCommand.Builder.class);
          internal_static_MechMania17_Command_AttackCommand_descriptor =
            internal_static_MechMania17_Command_descriptor.getNestedTypes().get(1);
          internal_static_MechMania17_Command_AttackCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_Command_AttackCommand_descriptor,
              new java.lang.String[] { "Source", "Target", },
              MechMania17.Mm17.Command.AttackCommand.class,
              MechMania17.Mm17.Command.AttackCommand.Builder.class);
          internal_static_MechMania17_Command_MoveCommand_descriptor =
            internal_static_MechMania17_Command_descriptor.getNestedTypes().get(2);
          internal_static_MechMania17_Command_MoveCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_Command_MoveCommand_descriptor,
              new java.lang.String[] { "Id", "Direction", },
              MechMania17.Mm17.Command.MoveCommand.class,
              MechMania17.Mm17.Command.MoveCommand.Builder.class);
          internal_static_MechMania17_Command_SummonCommand_descriptor =
            internal_static_MechMania17_Command_descriptor.getNestedTypes().get(3);
          internal_static_MechMania17_Command_SummonCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_Command_SummonCommand_descriptor,
              new java.lang.String[] { "Hp", "Damage", "Range", "Vision", "X", "Y", },
              MechMania17.Mm17.Command.SummonCommand.class,
              MechMania17.Mm17.Command.SummonCommand.Builder.class);
          internal_static_MechMania17_Command_LoadSubCommand_descriptor =
            internal_static_MechMania17_Command_descriptor.getNestedTypes().get(4);
          internal_static_MechMania17_Command_LoadSubCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_Command_LoadSubCommand_descriptor,
              new java.lang.String[] { "Submarine", "Unit", },
              MechMania17.Mm17.Command.LoadSubCommand.class,
              MechMania17.Mm17.Command.LoadSubCommand.Builder.class);
          internal_static_MechMania17_Command_MoveSubCommand_descriptor =
            internal_static_MechMania17_Command_descriptor.getNestedTypes().get(5);
          internal_static_MechMania17_Command_MoveSubCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_Command_MoveSubCommand_descriptor,
              new java.lang.String[] { "Submarine", "X", "Y", },
              MechMania17.Mm17.Command.MoveSubCommand.class,
              MechMania17.Mm17.Command.MoveSubCommand.Builder.class);
          internal_static_MechMania17_Command_SummonSubCommand_descriptor =
            internal_static_MechMania17_Command_descriptor.getNestedTypes().get(6);
          internal_static_MechMania17_Command_SummonSubCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_Command_SummonSubCommand_descriptor,
              new java.lang.String[] { "X", "Y", },
              MechMania17.Mm17.Command.SummonSubCommand.class,
              MechMania17.Mm17.Command.SummonSubCommand.Builder.class);
          internal_static_MechMania17_Command_AttachSubCommand_descriptor =
            internal_static_MechMania17_Command_descriptor.getNestedTypes().get(7);
          internal_static_MechMania17_Command_AttachSubCommand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_Command_AttachSubCommand_descriptor,
              new java.lang.String[] { "Submarine", },
              MechMania17.Mm17.Command.AttachSubCommand.class,
              MechMania17.Mm17.Command.AttachSubCommand.Builder.class);
          internal_static_MechMania17_Actions_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_MechMania17_Actions_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_Actions_descriptor,
              new java.lang.String[] { "Actions", },
              MechMania17.Mm17.Actions.class,
              MechMania17.Mm17.Actions.Builder.class);
          internal_static_MechMania17_GameState_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_MechMania17_GameState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_GameState_descriptor,
              new java.lang.String[] { "Gold", "Tiles", "Submarines", "Id", },
              MechMania17.Mm17.GameState.class,
              MechMania17.Mm17.GameState.Builder.class);
          internal_static_MechMania17_GameState_Unit_descriptor =
            internal_static_MechMania17_GameState_descriptor.getNestedTypes().get(0);
          internal_static_MechMania17_GameState_Unit_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_GameState_Unit_descriptor,
              new java.lang.String[] { "Id", "Hp", "Damage", "Range", "Vision", "Owner", },
              MechMania17.Mm17.GameState.Unit.class,
              MechMania17.Mm17.GameState.Unit.Builder.class);
          internal_static_MechMania17_GameState_Tile_descriptor =
            internal_static_MechMania17_GameState_descriptor.getNestedTypes().get(1);
          internal_static_MechMania17_GameState_Tile_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_GameState_Tile_descriptor,
              new java.lang.String[] { "X", "Y", "Owner", "Units", },
              MechMania17.Mm17.GameState.Tile.class,
              MechMania17.Mm17.GameState.Tile.Builder.class);
          internal_static_MechMania17_GameState_Submarine_descriptor =
            internal_static_MechMania17_GameState_descriptor.getNestedTypes().get(2);
          internal_static_MechMania17_GameState_Submarine_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_GameState_Submarine_descriptor,
              new java.lang.String[] { "X", "Y", "Id", "Submerged", "Units", },
              MechMania17.Mm17.GameState.Submarine.class,
              MechMania17.Mm17.GameState.Submarine.Builder.class);
          internal_static_MechMania17_Turn_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_MechMania17_Turn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MechMania17_Turn_descriptor,
              new java.lang.String[] { "TurnCount", "GameState", "Command", },
              MechMania17.Mm17.Turn.class,
              MechMania17.Mm17.Turn.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
