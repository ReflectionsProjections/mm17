package MechMania17;

option optimize_for = SPEED;

message ClientConnect {
	required string name = 1;
	optional int32 id = 2;
}

message PlayerList {
	repeated ClientConnect players = 1;
}

message DeadPlayers {
	message DeadPlayer {
		required string name = 1;
		required string reason = 2;
	}
	repeated DeadPlayer players = 1;
}

message FinalScores {
	message Score {
		required string name = 1;
		required int32 score = 2;
	}
	repeated Score scores = 1;
}

message InitialResources {
	message Tile {
		enum Terrain {
			PLAIN = 0;
			OCEAN = 1;
			MOUNTAIN = 2;
		}

		required int32 x = 1;
		required int32 y = 2;
		optional Terrain type = 3 [default=PLAIN];
	}

	required int32 id = 1; // player ID
	required int32 map_width = 2; // the map coords go from 0 to this number

	repeated Tile tiles = 3;
}

enum CommandType {
	SURRENDER = 0;
	ATTACK = 1;
	MOVE = 2;
	SUMMON = 3;

	LOADSUB = 4;
	MOVESUB = 5;
	SUMMONSUB = 7;
	ATTACHSUB = 8;
}

// All for the want of inheritance.
message Command {
	enum Direction {
		NORTH = 0;
		EAST = 1;
		WEST = 2;
		SOUTH = 3;
	}

	message SurrenderCommand {}
	message AttackCommand {
		required int32 source = 1;
		required int32 target = 2;
	}

	message MoveCommand {
		required int32 id = 1;
		required Direction direction = 2;
	}

	message SummonCommand {
		required int32 hp = 1;
		required int32 damage = 2;
		required int32 range = 3;
		required int32 vision = 4;
		required int32 x = 5;
		required int32 y = 6;
	}

	message LoadSubCommand {
		required int32 submarine = 1;
		required int32 unit = 2;
	}

	message MoveSubCommand {
		required int32 submarine = 1;
		required int32 x = 2;
		required int32 y = 3;
	}

	message SummonSubCommand {
		required int32 x = 1;
		required int32 y = 2;
	}

	message AttachSubCommand {
		required int32 submarine = 1;
	}

	required CommandType type = 1;
	optional SurrenderCommand surrender = 2;
	optional AttackCommand attack = 3;
	optional MoveCommand move = 4;
	optional SummonCommand summon = 5;
	optional LoadSubCommand load_sub = 6;
	optional MoveSubCommand move_sub = 7;
	optional SummonSubCommand summon_sub = 9;
	optional AttachSubCommand attach_sub = 10;
	optional bool succeeded = 11;
	optional int32 id = 13;
}

message Actions {
	repeated Command actions = 1;
}

message GameState {
	required int32 gold = 1;
	repeated Tile tiles = 2;
	repeated Submarine submarines = 3;
	required int32 id = 4; // player ID

	message Unit {
		required int32 id = 1;
		required int32 hp = 2;
		required int32 damage = 3;
		required int32 range = 4;
		required int32 vision = 5;
		required int32 owner = 6;
	}

	message Tile {
		required int32 x = 1;
		required int32 y = 2;

		// Impassible terrain is not owned
		optional int32 owner = 3;

		repeated Unit units = 4;
	}

	message Submarine {
		required int32 x = 1;
		required int32 y = 2;
		required int32 id = 3;
		required bool submerged = 4;
		repeated Unit units = 5;
	}
}

message Turn {
	required int32 turn_count = 1;
	optional GameState game_state = 2;
	optional Command command = 3;
}
